{"mappings":"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","sources":["node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js","node_modules/izitoast/dist/js/iziToast.js","src/js/modal-developers.js"],"sourcesContent":["import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, createMockUserToken as a, getModularInstance as h } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass l {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ l.UNAUTHENTICATED = new l(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nl.GOOGLE_CREDENTIALS = new l(\"google-credentials-uid\"), l.FIRST_PARTY = new l(\"first-party-uid\"), \nl.MOCK_USER = new l(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet f = \"9.9.4\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst d = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function w(t) {\n    d.setLogLevel(t);\n}\n\nfunction m(t, ...e) {\n    if (d.logLevel <= u.DEBUG) {\n        const n = e.map(_);\n        d.debug(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\nfunction p(t, ...e) {\n    if (d.logLevel <= u.ERROR) {\n        const n = e.map(_);\n        d.error(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function y(t, ...e) {\n    if (d.logLevel <= u.WARN) {\n        const n = e.map(_);\n        d.warn(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function _(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function g(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${f}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw p(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function v(t, e) {\n    t || g();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function b(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const E = \"ok\", T = \"cancelled\", I = \"unknown\", A = \"invalid-argument\", R = \"deadline-exceeded\", P = \"not-found\", V = \"already-exists\", N = \"permission-denied\", D = \"unauthenticated\", $ = \"resource-exhausted\", x = \"failed-precondition\", F = \"aborted\", S = \"out-of-range\", q = \"unimplemented\", O = \"internal\", k = \"unavailable\", C = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class L extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class M {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class U {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class j {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(l.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class B {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class z {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (v(\"string\" == typeof t.accessToken), \n        new U(t.accessToken, new l(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = l.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        v(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class W {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(l.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass K {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class Q {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (v(\"string\" == typeof t.token), \n        new K(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Y {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass H {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new H(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof H && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass J {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && g(), void 0 === n ? n = t.length - e : n > t.length - e && g(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === J.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof J ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class X extends J {\n    construct(t, e, n) {\n        return new X(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new L(A, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new X(e);\n    }\n    static emptyPath() {\n        return new X([]);\n    }\n}\n\nconst Z = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class tt extends J {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return Z.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        tt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new tt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new L(A, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new L(A, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new L(A, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new L(A, \"Unterminated ` in path: \" + t);\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class et {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new et(X.fromString(t));\n    }\n    static fromName(t) {\n        return new et(X.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new et(X.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === X.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return X.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new et(new X(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function nt(t, e, n) {\n    if (!n) throw new L(A, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction rt(t) {\n    if (!et.isDocumentKey(t)) throw new L(A, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function st(t) {\n    if (et.isDocumentKey(t)) throw new L(A, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction it(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : g();\n}\n\nfunction ot(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new L(A, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = it(t);\n            throw new L(A, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction ut(t, e) {\n    if (e <= 0) throw new L(A, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ct(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function at(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ht = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar lt, ft;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction dt(t) {\n    if (void 0 === t) return p(\"RPC_ERROR\", \"HTTP error has no status\"), I;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return E;\n\n      case 400:\n        // Bad Request\n        return x;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return D;\n\n      case 403:\n        // Forbidden\n        return N;\n\n      case 404:\n        // Not Found\n        return P;\n\n      case 409:\n        // Conflict\n        return F;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return S;\n\n      case 429:\n        // Too Many Requests\n        return $;\n\n      case 499:\n        // Client Closed Request\n        return T;\n\n      case 500:\n        // Internal Server Error\n        return I;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return q;\n\n      case 503:\n        // Service Unavailable\n        return k;\n\n      case 504:\n        // Gateway Timeout\n        return R;\n\n      default:\n        return t >= 200 && t < 300 ? E : t >= 400 && t < 500 ? x : t >= 500 && t < 600 ? O : I;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (ft = lt || (lt = {}))[ft.OK = 0] = \"OK\", ft[ft.CANCELLED = 1] = \"CANCELLED\", \nft[ft.UNKNOWN = 2] = \"UNKNOWN\", ft[ft.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nft[ft.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ft[ft.NOT_FOUND = 5] = \"NOT_FOUND\", \nft[ft.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ft[ft.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nft[ft.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ft[ft.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nft[ft.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ft[ft.ABORTED = 10] = \"ABORTED\", \nft[ft.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ft[ft.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nft[ft.INTERNAL = 13] = \"INTERNAL\", ft[ft.UNAVAILABLE = 14] = \"UNAVAILABLE\", ft[ft.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass wt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    v(t, e, n, r, s) {\n        const i = this.T(t, e);\n        m(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.I(o, r, s), this.A(t, i, o, n).then((t => (m(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw y(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    R(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.v(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    I(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + f, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    T(t, e) {\n        const n = ht[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.P = e;\n    }\n    V(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async A(t, e, n, r) {\n        const s = JSON.stringify(r);\n        let i;\n        try {\n            i = await this.P(e, {\n                method: \"POST\",\n                headers: n,\n                body: s\n            });\n        } catch (t) {\n            throw new L(dt(t.status), \"Request failed with error: \" + t.statusText);\n        }\n        if (!i.ok) throw new L(dt(i.status), \"Request failed with error: \" + i.statusText);\n        return i.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction mt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class pt {\n    static N() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = mt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction yt(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function _t(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass gt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new L(A, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new L(A, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new L(A, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new L(A, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return gt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return gt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new gt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? yt(this.nanoseconds, t.nanoseconds) : yt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class vt {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new vt(t);\n    }\n    static min() {\n        return new vt(new gt(0, 0));\n    }\n    static max() {\n        return new vt(new gt(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass Tt {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || At.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new Tt(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, At.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new Tt(this.comparator, this.root.remove(t, this.comparator).copy(null, null, At.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new It(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new It(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new It(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new It(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass It {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass At {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : At.RED, this.left = null != r ? r : At.EMPTY, \n        this.right = null != s ? s : At.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new At(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return At.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return At.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, At.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, At.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw g();\n        if (this.right.isRed()) throw g();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw g();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nAt.EMPTY = null, At.RED = !0, At.BLACK = !1;\n\n// end LLRBEmptyNode\nAt.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw g();\n    }\n    get value() {\n        throw g();\n    }\n    get color() {\n        throw g();\n    }\n    get left() {\n        throw g();\n    }\n    get right() {\n        throw g();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new At(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass Rt {\n    constructor(t) {\n        this.comparator = t, this.data = new Tt(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new Pt(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new Pt(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof Rt)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new Rt(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass Pt {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class Vt {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(tt.comparator);\n    }\n    static empty() {\n        return new Vt([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new Rt(tt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new Vt(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return _t(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass Nt {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new Nt(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new Nt(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return yt(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nNt.EMPTY_BYTE_STRING = new Nt(\"\");\n\nconst Dt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function $t(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (v(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Dt.exec(t);\n        if (v(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: xt(t.seconds),\n        nanos: xt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function xt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Ft(t) {\n    return \"string\" == typeof t ? Nt.fromBase64String(t) : Nt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function St(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function qt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return St(e) ? qt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function Ot(t) {\n    const e = $t(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new gt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const kt = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction Ct(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? St(t) ? 4 /* ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ (t) ? 9007199254740991 /* MaxValue */ : 10 /* ObjectValue */ : g();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Lt(t, e) {\n    if (t === e) return !0;\n    const n = Ct(t);\n    if (n !== Ct(e)) return !1;\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return Ot(t).isEqual(Ot(e));\n\n      case 3 /* TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = $t(t.timestampValue), r = $t(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            return Ft(t.bytesValue).isEqual(Ft(e.bytesValue));\n        }(t, e);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            return xt(t.geoPointValue.latitude) === xt(e.geoPointValue.latitude) && xt(t.geoPointValue.longitude) === xt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return xt(t.integerValue) === xt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = xt(t.doubleValue), r = xt(e.doubleValue);\n                return n === r ? at(n) === at(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* ArrayValue */ :\n        return _t(t.arrayValue.values || [], e.arrayValue.values || [], Lt);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Lt(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return g();\n    }\n}\n\nfunction Mt(t, e) {\n    return void 0 !== (t.values || []).find((t => Lt(t, e)));\n}\n\nfunction Ut(t, e) {\n    if (t === e) return 0;\n    const n = Ct(t), r = Ct(e);\n    if (n !== r) return yt(n, r);\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return yt(t.booleanValue, e.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            const n = xt(t.integerValue || t.doubleValue), r = xt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TimestampValue */ :\n        return jt(t.timestampValue, e.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return jt(Ot(t), Ot(e));\n\n      case 5 /* StringValue */ :\n        return yt(t.stringValue, e.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            const n = Ft(t), r = Ft(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = yt(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return yt(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            const n = yt(xt(t.latitude), xt(e.latitude));\n            if (0 !== n) return n;\n            return yt(xt(t.longitude), xt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Ut(n[t], r[t]);\n                if (e) return e;\n            }\n            return yt(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            if (t === kt && e === kt) return 0;\n            if (t === kt) return 1;\n            if (e === kt) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = yt(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Ut(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return yt(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw g();\n    }\n}\n\nfunction jt(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return yt(t, e);\n    const n = $t(t), r = $t(e), s = yt(n.seconds, r.seconds);\n    return 0 !== s ? s : yt(n.nanos, r.nanos);\n}\n\nfunction Bt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function zt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Gt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Wt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Kt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Qt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Qt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Qt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Yt {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new Yt({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Kt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Qt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = tt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Qt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Kt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Lt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Kt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new Yt(Qt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class Ht {\n    constructor(t, e, n, r, s, i) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.data = s, \n        this.documentState = i;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new Ht(t, 0 /* INVALID */ , vt.min(), vt.min(), Yt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n) {\n        return new Ht(t, 1 /* FOUND_DOCUMENT */ , e, vt.min(), n, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new Ht(t, 2 /* NO_DOCUMENT */ , e, vt.min(), Yt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new Ht(t, 3 /* UNKNOWN_DOCUMENT */ , e, vt.min(), Yt.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = Yt.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = Yt.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this.version = vt.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof Ht && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new Ht(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass Jt {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.D = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function Xt(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new Jt(t, e, n, r, s, i, o);\n}\n\nclass Zt extends class {} {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* IN */ === e || \"not-in\" /* NOT_IN */ === e ? this.$(t, e, n) : new te(t, e, n) : \"array-contains\" /* ARRAY_CONTAINS */ === e ? new se(t, n) : \"in\" /* IN */ === e ? new ie(t, n) : \"not-in\" /* NOT_IN */ === e ? new oe(t, n) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === e ? new ue(t, n) : new Zt(t, e, n);\n    }\n    static $(t, e, n) {\n        return \"in\" /* IN */ === e ? new ee(t, n) : new ne(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.F(Ut(e, this.value)) : null !== e && Ct(this.value) === Ct(e) && this.F(Ut(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    F(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return g();\n        }\n    }\n    S() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass te extends Zt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = et.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = et.comparator(t.key, this.key);\n        return this.F(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class ee extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e), this.keys = re(\"in\" /* IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class ne extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e), this.keys = re(\"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction re(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => et.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class se extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return zt(e) && Mt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ie extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && Mt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class oe extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        if (Mt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !Mt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ue extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!zt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => Mt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class ce {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class ae {\n    constructor(t, e = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction he(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction le(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Lt(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class fe {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.q = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.O = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function de(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction we(t) {\n    for (const e of t.filters) if (e.S()) return e.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction me(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function pe(t) {\n    const e = b(t);\n    if (null === e.q) {\n        e.q = [];\n        const t = we(e), n = de(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.q.push(new ae(t)), e.q.push(new ae(tt.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.q.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                e.q.push(new ae(tt.keyField(), t));\n            }\n        }\n    }\n    return e.q;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function ye(t) {\n    const e = b(t);\n    if (!e.O) if (\"F\" /* First */ === e.limitType) e.O = Xt(e.path, e.collectionGroup, pe(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of pe(e)) {\n            const e = \"desc\" /* DESCENDING */ === n.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new ae(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new ce(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new ce(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.O = Xt(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.O;\n}\n\nfunction _e(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!he(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let s = 0; s < t.filters.length; s++) if (n = t.filters[s], r = e.filters[s], \n        n.op !== r.op || !n.field.isEqual(r.field) || !Lt(n.value, r.value)) return !1;\n        var n, r;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!le(t.startAt, e.startAt) && le(t.endAt, e.endAt);\n    }(ye(t), ye(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction ge(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !at(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.k) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: at(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class ve {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class be extends ve {}\n\n/** Transforms an array value via a union operation. */ class Ee extends ve {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class Te extends ve {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Ie extends ve {\n    constructor(t, e) {\n        super(), this.C = t, this.L = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class Ae {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Re {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Re;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Re(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Re(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Pe {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Ve extends Pe {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class Ne extends Pe {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class De extends Pe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class $e extends Pe {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const xe = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Fe = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Se {\n    constructor(t, e) {\n        this.databaseId = t, this.k = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction qe(t, e) {\n    if (t.k) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Oe(t, e) {\n    return t.k ? e.toBase64() : e.toUint8Array();\n}\n\nfunction ke(t, e) {\n    return qe(t, e.toTimestamp());\n}\n\nfunction Ce(t) {\n    return v(!!t), vt.fromTimestamp(function(t) {\n        const e = $t(t);\n        return new gt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction Le(t, e) {\n    return function(t) {\n        return new X([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Me(t, e) {\n    return Le(t.databaseId, e.path);\n}\n\nfunction Ue(t, e) {\n    const n = function(t) {\n        const e = X.fromString(t);\n        return v(Xe(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new L(A, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new L(A, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new et((v((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction je(t, e) {\n    return Le(t.databaseId, e);\n}\n\nfunction Be(t) {\n    return new X([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction ze(t, e, n) {\n    return {\n        name: Me(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction Ge(t, e) {\n    return \"found\" in e ? function(t, e) {\n        v(!!e.found), e.found.name, e.found.updateTime;\n        const n = Ue(t, e.found.name), r = Ce(e.found.updateTime), s = new Yt({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return Ht.newFoundDocument(n, r, s);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        v(!!e.missing), v(!!e.readTime);\n        const n = Ue(t, e.missing), r = Ce(e.readTime);\n        return Ht.newNoDocument(n, r);\n    }(t, e) : g();\n}\n\nfunction We(t, e) {\n    let n;\n    if (e instanceof Ve) n = {\n        update: ze(t, e.key, e.value)\n    }; else if (e instanceof De) n = {\n        delete: Me(t, e.key)\n    }; else if (e instanceof Ne) n = {\n        update: ze(t, e.key, e.data),\n        updateMask: Je(e.fieldMask)\n    }; else {\n        if (!(e instanceof $e)) return g();\n        n = {\n            verify: Me(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof be) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Ee) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Te) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ie) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.L\n        };\n        throw g();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: ke(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : g();\n    }(t, e.precondition)), n;\n}\n\nfunction Ke(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = je(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = je(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        const e = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Gt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (Wt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Gt(t.value)) return {\n                    unaryFilter: {\n                        field: He(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: He(t.field),\n                    op: Ye(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: e\n            }\n        };\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: He(t.field),\n                direction: Qe(t.dir)\n            };\n        }(t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.k || ct(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction Qe(t) {\n    return xe[t];\n}\n\n// visible for testing\nfunction Ye(t) {\n    return Fe[t];\n}\n\nfunction He(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction Je(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction Xe(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Ze(t) {\n    return new Se(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass tn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.M = t, this.timerId = e, this.U = n, this.j = r, this.B = s, this.G = 0, this.W = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.K = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.G = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Y() {\n        this.G = this.B;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    H(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.G + this.J()), n = Math.max(0, Date.now() - this.K), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && m(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.G} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.W = this.M.enqueueAfterDelay(this.timerId, r, (() => (this.K = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.G *= this.j, this.G < this.U && (this.G = this.U), this.G > this.B && (this.G = this.B);\n    }\n    X() {\n        null !== this.W && (this.W.skipDelay(), this.W = null);\n    }\n    cancel() {\n        null !== this.W && (this.W.cancel(), this.W = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    J() {\n        return (Math.random() - .5) * this.G;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass en extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.Z = n, this.C = r, \n        this.tt = !1;\n    }\n    et() {\n        if (this.tt) throw new L(x, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    v(t, e, n) {\n        return this.et(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.Z.v(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === D && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new L(I, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    R(t, e, n, r) {\n        return this.et(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.Z.R(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === D && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new L(I, t.toString());\n        }));\n    }\n    terminate() {\n        this.tt = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function nn(t, e) {\n    const n = b(t), r = Be(n.C) + \"/documents\", s = {\n        writes: e.map((t => We(n.C, t)))\n    };\n    await n.v(\"Commit\", r, s);\n}\n\nasync function rn(t, e) {\n    const n = b(t), r = Be(n.C) + \"/documents\", s = {\n        documents: e.map((t => Me(n.C, t)))\n    }, i = await n.R(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = Ge(n.C, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        v(!!e), u.push(e);\n    })), u;\n}\n\nasync function sn(t, e) {\n    const n = b(t), r = Ke(n.C, ye(e));\n    return (await n.R(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Ue(t, e.name), s = Ce(e.updateTime), i = new Yt({\n            mapValue: {\n                fields: e.fields\n            }\n        }), o = Ht.newFoundDocument(r, s, i);\n        return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n    }(n.C, t.document, void 0)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const on = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction un(t) {\n    if (t._terminated) throw new L(x, \"The client has already been terminated.\");\n    if (!on.has(t)) {\n        m(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new wt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new Y(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = Ze(t._databaseId), u = function(t, e, n, r) {\n            return new en(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        on.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return on.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass cn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new L(A, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new L(A, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new L(A, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */ class an {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new cn({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new L(x, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new L(x, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new cn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new j;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new W(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new L(A, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = on.get(t);\n            e && (m(\"ComponentProvider\", \"Removing Datastore\"), on.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction hn(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new L(x, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction ln(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\";\n    return _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function fn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ot(t, an))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && y(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = l.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = a(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new L(A, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new l(i);\n        }\n        t._authCredentials = new B(new U(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function dn(t) {\n    return t = ot(t, an), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nclass wn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new pn(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new wn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class mn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new mn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class pn extends mn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new fe(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new wn(this.firestore, \n        /* converter= */ null, new et(t));\n    }\n    withConverter(t) {\n        return new pn(this.firestore, t, this._path);\n    }\n}\n\nfunction yn(t, e, ...n) {\n    if (t = h(t), nt(\"collection\", \"path\", e), t instanceof an) {\n        const r = X.fromString(e, ...n);\n        return st(r), new pn(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof wn || t instanceof pn)) throw new L(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(e, ...n));\n        return st(r), new pn(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function _n(t, e) {\n    if (t = ot(t, an), nt(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new L(A, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new mn(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new fe(X.emptyPath(), t);\n    }(e));\n}\n\nfunction gn(t, e, ...n) {\n    if (t = h(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = pt.N()), nt(\"doc\", \"path\", e), t instanceof an) {\n        const r = X.fromString(e, ...n);\n        return rt(r), new wn(t, \n        /* converter= */ null, new et(r));\n    }\n    {\n        if (!(t instanceof wn || t instanceof pn)) throw new L(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(e, ...n));\n        return rt(r), new wn(t.firestore, t instanceof pn ? t.converter : null, new et(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function vn(t, e) {\n    return t = h(t), e = h(e), (t instanceof wn || t instanceof pn) && (e instanceof wn || e instanceof pn) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function bn(t, e) {\n    return t = h(t), e = h(e), t instanceof mn && e instanceof mn && (t.firestore === e.firestore && _e(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class En {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new L(A, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new tt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Tn() {\n    return new En(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class In {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new In(Nt.fromBase64String(t));\n        } catch (t) {\n            throw new L(A, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new In(Nt.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class An {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class Rn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new L(A, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new L(A, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return yt(this._lat, t._lat) || yt(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Pn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Vn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new Ne(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Ve(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Nn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new Ne(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Dn(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw g();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class $n {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.C = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.nt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get rt() {\n        return this.settings.rt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    st(t) {\n        return new $n(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.C, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    it(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.st({\n            path: n,\n            ot: !1\n        });\n        return r.ut(t), r;\n    }\n    ct(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.st({\n            path: n,\n            ot: !1\n        });\n        return r.nt(), r;\n    }\n    at(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.st({\n            path: void 0,\n            ot: !0\n        });\n    }\n    ht(t) {\n        return Jn(t, this.settings.methodName, this.settings.lt || !1, this.path, this.settings.ft);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    nt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ut(this.path.get(t));\n    }\n    ut(t) {\n        if (0 === t.length) throw this.ht(\"Document fields must not be empty\");\n        if (Dn(this.rt) && Pn.test(t)) throw this.ht('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class xn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.C = n || Ze(t);\n    }\n    /** Creates a new top-level parse context. */    dt(t, e, n, r = !1) {\n        return new $n({\n            rt: t,\n            methodName: e,\n            ft: n,\n            path: tt.emptyPath(),\n            ot: !1,\n            lt: r\n        }, this.databaseId, this.C, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Fn(t) {\n    const e = t._freezeSettings(), n = Ze(t._databaseId);\n    return new xn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Sn(t, e, n, r, s, i = {}) {\n    const o = t.dt(i.merge || i.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, s);\n    Kn(\"Data must be an object, but it was:\", o, r);\n    const u = Gn(r, o);\n    let c, a;\n    if (i.merge) c = new Vt(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = Qn(e, r, n);\n            if (!o.contains(s)) throw new L(A, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            Xn(t, s) || t.push(s);\n        }\n        c = new Vt(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Vn(new Yt(u), c, a);\n}\n\nclass qn extends An {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.rt) throw 1 /* Update */ === t.rt ? t.ht(`${this._methodName}() can only appear at the top level of your update data`) : t.ht(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof qn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function On(t, e, n) {\n    return new $n({\n        rt: 3 /* Argument */ ,\n        ft: e.settings.ft,\n        methodName: t._methodName,\n        ot: n\n    }, e.databaseId, e.C, e.ignoreUndefinedProperties);\n}\n\nclass kn extends An {\n    _toFieldTransform(t) {\n        return new Ae(t.path, new be);\n    }\n    isEqual(t) {\n        return t instanceof kn;\n    }\n}\n\nclass Cn extends An {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = On(this, t, \n        /*array=*/ !0), n = this.wt.map((t => zn(t, e))), r = new Ee(n);\n        return new Ae(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Ln extends An {\n    constructor(t, e) {\n        super(t), this.wt = e;\n    }\n    _toFieldTransform(t) {\n        const e = On(this, t, \n        /*array=*/ !0), n = this.wt.map((t => zn(t, e))), r = new Te(n);\n        return new Ae(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass Mn extends An {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Ie(t.C, ge(t.C, this.yt));\n        return new Ae(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function Un(t, e, n, r) {\n    const s = t.dt(1 /* Update */ , e, n);\n    Kn(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = Yt.empty();\n    Et(r, ((t, r) => {\n        const u = Hn(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = h(r);\n        const c = s.ct(u);\n        if (r instanceof qn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = zn(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new Vt(i);\n    return new Nn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function jn(t, e, n, r, s, i) {\n    const o = t.dt(1 /* Update */ , e, n), u = [ Qn(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new L(A, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(Qn(e, i[t])), c.push(i[t + 1]);\n    const a = [], l = Yt.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!Xn(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = h(n);\n        const r = o.ct(e);\n        if (n instanceof qn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = zn(n, r);\n            null != t && (a.push(e), l.set(e, t));\n        }\n    }\n    const f = new Vt(a);\n    return new Nn(l, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function Bn(t, e, n, r = !1) {\n    return zn(n, t.dt(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function zn(t, e) {\n    if (Wn(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = h(t))) return Kn(\"Unsupported field value:\", e, t), Gn(t, e);\n    if (t instanceof An) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Dn(e.rt)) throw e.ht(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ht(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.ot && 4 /* ArrayArgument */ !== e.rt) throw e.ht(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = zn(s, e.at(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = h(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return ge(e.C, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = gt.fromDate(t);\n            return {\n                timestampValue: qe(e.C, n)\n            };\n        }\n        if (t instanceof gt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new gt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: qe(e.C, n)\n            };\n        }\n        if (t instanceof Rn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof In) return {\n            bytesValue: Oe(e.C, t._byteString)\n        };\n        if (t instanceof wn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.ht(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: Le(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ht(`Unsupported field value: ${it(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction Gn(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Et(t, ((t, r) => {\n        const s = zn(r, e.it(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction Wn(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof gt || t instanceof Rn || t instanceof In || t instanceof wn || t instanceof An);\n}\n\nfunction Kn(t, e, n) {\n    if (!Wn(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = it(n);\n        throw \"an object\" === r ? e.ht(t + \" a custom object\") : e.ht(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function Qn(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = h(e)) instanceof En) return e._internalPath;\n    if (\"string\" == typeof e) return Hn(t, e);\n    throw Jn(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const Yn = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function Hn(t, e, n) {\n    if (e.search(Yn) >= 0) throw Jn(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new En(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw Jn(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction Jn(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new L(A, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function Xn(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class Zn {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new wn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new tr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(rr(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class tr extends Zn {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class er {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function nr(t, e) {\n    return t = h(t), e = h(e), t instanceof Zn && e instanceof Zn ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof er && e instanceof er && (bn(t.query, e.query) && _t(t.docs, e.docs, nr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function rr(t, e) {\n    return \"string\" == typeof e ? Hn(t, e) : e instanceof En ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass sr {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function ir(t, ...e) {\n    for (const n of e) t = n._apply(t);\n    return t;\n}\n\nclass or extends sr {\n    constructor(t, e, n) {\n        super(), this._t = t, this.gt = e, this.vt = n, this.type = \"where\";\n    }\n    _apply(t) {\n        const e = Fn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === i || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === i) throw new L(A, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i) {\n                    br(o, i);\n                    const e = [];\n                    for (const n of o) e.push(vr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = vr(r, t, o);\n            } else \"in\" /* IN */ !== i && \"not-in\" /* NOT_IN */ !== i && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== i || br(o, i), \n            u = Bn(n, e, o, \n            /* allowArrays= */ \"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i);\n            const c = Zt.create(s, i, u);\n            return function(t, e) {\n                if (e.S()) {\n                    const n = we(t);\n                    if (null !== n && !n.isEqual(e.field)) throw new L(A, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n                    const r = de(t);\n                    null !== r && Er(t, e.field, r);\n                }\n                const n = function(t, e) {\n                    for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(e.op));\n                if (null !== n) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw n === e.op ? new L(A, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new L(A, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n            }(t, c), c;\n        }(t._query, \"where\", e, t.firestore._databaseId, this._t, this.gt, this.vt);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            const n = t.filters.concat([ e ]);\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function ur(t, e, n) {\n    const r = e, s = rr(\"where\", t);\n    return new or(s, r, n);\n}\n\nclass cr extends sr {\n    constructor(t, e) {\n        super(), this._t = t, this.bt = e, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new L(A, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new L(A, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new ae(e, n);\n            return function(t, e) {\n                if (null === de(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = we(t);\n                    null !== n && Er(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._t, this.bt);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new fe(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function ar(t, e = \"asc\") {\n    const n = e, r = rr(\"orderBy\", t);\n    return new cr(r, n);\n}\n\nclass hr extends sr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Et = e, this.Tt = n;\n    }\n    _apply(t) {\n        return new mn(t.firestore, t.converter, function(t, e, n) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this.Et, this.Tt));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function lr(t) {\n    return ut(\"limit\", t), new hr(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function fr(t) {\n    return ut(\"limitToLast\", t), new hr(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass dr extends sr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.It = e, this.At = n;\n    }\n    _apply(t) {\n        const e = gr(t, this.type, this.It, this.At);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction wr(...t) {\n    return new dr(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction mr(...t) {\n    return new dr(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\nclass pr extends sr {\n    constructor(t, e, n) {\n        super(), this.type = t, this.It = e, this.At = n;\n    }\n    _apply(t) {\n        const e = gr(t, this.type, this.It, this.At);\n        return new mn(t.firestore, t.converter, function(t, e) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction yr(...t) {\n    return new pr(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction _r(...t) {\n    return new pr(\"endAt\", t, /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function gr(t, e, n, r) {\n    if (n[0] = h(n[0]), n[0] instanceof Zn) return function(t, e, n, r, s) {\n        if (!r) throw new L(P, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of pe(t)) if (n.field.isKeyField()) i.push(Bt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (St(t)) throw new L(A, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new L(A, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new ce(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Fn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new L(A, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new L(A, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!me(t) && -1 !== c.indexOf(\"/\")) throw new L(A, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(X.fromString(c));\n                    if (!et.isDocumentKey(n)) throw new L(A, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new et(n);\n                    u.push(Bt(e, s));\n                } else {\n                    const t = Bn(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new ce(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction vr(t, e, n) {\n    if (\"string\" == typeof (n = h(n))) {\n        if (\"\" === n) throw new L(A, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!me(e) && -1 !== n.indexOf(\"/\")) throw new L(A, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(X.fromString(n));\n        if (!et.isDocumentKey(r)) throw new L(A, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Bt(t, new et(r));\n    }\n    if (n instanceof wn) return Bt(t, n._key);\n    throw new L(A, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${it(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function br(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new L(A, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new L(A, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction Er(t, e, n) {\n    if (!n.isEqual(e)) throw new L(A, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Tr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Ir extends class {\n    convertValue(t, e = \"none\") {\n        switch (Ct(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return xt(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(Ft(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw g();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new Rn(xt(t.latitude), xt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = qt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(Ot(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = $t(t);\n        return new gt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = X.fromString(t);\n        v(Xe(n));\n        const r = new H(n.get(1), n.get(3)), s = new et(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        p(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new In(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new wn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Ar(t) {\n    const e = un((t = ot(t, wn)).firestore), n = new Ir(t.firestore);\n    return rn(e, [ t._key ]).then((e => {\n        v(1 === e.length);\n        const r = e[0];\n        return new Zn(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function Rr(t) {\n    !function(t) {\n        if (\"L\" /* Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new L(q, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ot(t, mn))._query);\n    const e = un(t.firestore), n = new Ir(t.firestore);\n    return sn(e, t._query).then((e => {\n        const r = e.map((e => new tr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new er(t, r);\n    }));\n}\n\nfunction Pr(t, e, n) {\n    const r = Tr((t = ot(t, wn)).converter, e, n), s = Sn(Fn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return nn(un(t.firestore), [ s.toMutation(t._key, Re.none()) ]);\n}\n\nfunction Vr(t, e, n, ...r) {\n    const s = Fn((t = ot(t, wn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = h(e)) || e instanceof En ? jn(s, \"updateDoc\", t._key, e, n, r) : Un(s, \"updateDoc\", t._key, e);\n    return nn(un(t.firestore), [ i.toMutation(t._key, Re.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Nr(t) {\n    return nn(un((t = ot(t, wn)).firestore), [ new De(t._key, Re.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Dr(t, e) {\n    const n = gn(t = ot(t, pn)), r = Tr(t.converter, e), s = Sn(Fn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return nn(un(t.firestore), [ s.toMutation(n._key, Re.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function $r() {\n    return new qn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function xr() {\n    return new kn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Fr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Cn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Sr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Ln(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function qr(t) {\n    return new Mn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class Or {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Fn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = kr(t, this._firestore), s = Tr(r.converter, e, n), i = Sn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Re.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = kr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = h(e)) || e instanceof En ? jn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : Un(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Re.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = kr(t, this._firestore);\n        return this._mutations = this._mutations.concat(new De(e._key, Re.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new L(x, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction kr(t, e) {\n    if ((t = h(t)).firestore !== e) throw new L(A, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function Cr(t) {\n    const e = un(t = ot(t, an));\n    return new Or(t, (t => nn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class Lr {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new L(A, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await rn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new De(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = et.fromPath(e);\n            this.mutations.push(new $e(n, this.precondition(n)));\n        })), await nn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw g();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = vt.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new L(F, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(vt.min()) ? Re.exists(!1) : Re.updateTime(e) : Re.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(vt.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new L(A, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Re.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Re.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Mr = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass Ur {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this.Rt = n.maxAttempts, this.Pt = new tn(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Rt -= 1, this.Vt();\n    }\n    Vt() {\n        this.Pt.H((async () => {\n            const t = new Lr(this.datastore), e = this.Nt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.Dt(t);\n                }))));\n            })).catch((t => {\n                this.Dt(t);\n            }));\n        }));\n    }\n    Nt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ct(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    Dt(t) {\n        this.Rt > 0 && this.$t(t) ? (this.Rt -= 1, this.asyncQueue.enqueueAndForget((() => (this.Vt(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    $t(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return g();\n\n                  case T:\n                  case I:\n                  case R:\n                  case $:\n                  case O:\n                  case k:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case D:\n                    return !1;\n\n                  case A:\n                  case P:\n                  case V:\n                  case N:\n                  case x:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case F:\n                  case S:\n                  case q:\n                  case C:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function jr() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class Br {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new M, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new Br(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new L(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class zr {\n    constructor() {\n        // The last promise in the queue.\n        this.xt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Ft = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.St = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.qt = [], \n        // visible for testing\n        this.Ot = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.kt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Ct = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Lt = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.Pt = new tn(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Mt = () => {\n            const t = jr();\n            t && m(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.Pt.X();\n        };\n        const t = jr();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Mt);\n    }\n    get isShuttingDown() {\n        return this.St;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Ut(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.jt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.St) {\n            this.St = !0, this.Ct = t || !1;\n            const e = jr();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Mt);\n        }\n    }\n    enqueue(t) {\n        if (this.Ut(), this.St) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new M;\n        return this.jt((() => this.St && this.Ct ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Ft.push(t), this.Bt())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Bt() {\n        if (0 !== this.Ft.length) {\n            try {\n                await this.Ft[0](), this.Ft.shift(), this.Pt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                m(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Ft.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.Pt.H((() => this.Bt()));\n        }\n    }\n    jt(t) {\n        const e = this.xt.then((() => (this.kt = !0, t().catch((t => {\n            this.Ot = t, this.kt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw p(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.kt = !1, t))))));\n        return this.xt = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Ut(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Lt.indexOf(t) > -1 && (e = 0);\n        const r = Br.createAndSchedule(this, t, e, n, (t => this.zt(t)));\n        return this.qt.push(r), r;\n    }\n    Ut() {\n        this.Ot && g();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Gt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.xt, await t;\n        } while (t !== this.xt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Wt(t) {\n        for (const e of this.qt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Kt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Gt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.qt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.qt) if (e.skipDelay(), \"all\" /* All */ !== t && e.timerId === t) break;\n            return this.Gt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Qt(t) {\n        this.Lt.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    zt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.qt.indexOf(t);\n        this.qt.splice(e, 1);\n    }\n}\n\nclass Gr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Fn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = kr(t, this._firestore), n = new Ir(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return g();\n            const r = t[0];\n            if (r.isFoundDocument()) return new Zn(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new Zn(this._firestore, n, e._key, null, e.converter);\n            throw g();\n        }));\n    }\n    set(t, e, n) {\n        const r = kr(t, this._firestore), s = Tr(r.converter, e, n), i = Sn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = kr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = h(e)) || e instanceof En ? jn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : Un(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = kr(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function Wr(t, e, n) {\n    const r = un(t = ot(t, an)), s = Object.assign(Object.assign({}, Mr), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new L(A, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new M;\n    return new Ur(new zr, r, s, (n => e(new Gr(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    f = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new an(new z(t.getProvider(\"auth-internal\")), new Q(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new L(A, '\"projectId\" not provided in firebase.initializeApp.');\n        return new H(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.4.15\", \"\"), r(\"firestore-lite\", \"3.4.15\", \"__BUILD_TARGET__\");\n\nexport { In as Bytes, pn as CollectionReference, wn as DocumentReference, Zn as DocumentSnapshot, En as FieldPath, An as FieldValue, an as Firestore, L as FirestoreError, Rn as GeoPoint, mn as Query, sr as QueryConstraint, tr as QueryDocumentSnapshot, er as QuerySnapshot, gt as Timestamp, Gr as Transaction, Or as WriteBatch, Dr as addDoc, Sr as arrayRemove, Fr as arrayUnion, yn as collection, _n as collectionGroup, fn as connectFirestoreEmulator, Nr as deleteDoc, $r as deleteField, gn as doc, Tn as documentId, _r as endAt, yr as endBefore, Ar as getDoc, Rr as getDocs, ln as getFirestore, qr as increment, hn as initializeFirestore, lr as limit, fr as limitToLast, ar as orderBy, ir as query, bn as queryEqual, vn as refEqual, Wr as runTransaction, xr as serverTimestamp, Pr as setDoc, w as setLogLevel, nr as snapshotEqual, mr as startAfter, wr as startAt, dn as terminate, Vr as updateDoc, ur as where, Cr as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n","/*\r\n* iziToast | v1.4.0\r\n* http://izitoast.marcelodolce.com\r\n* by Marcelo Dolce.\r\n*/\r\n(function (root, factory) {\r\n\tif(typeof define === 'function' && define.amd) {\r\n\t\tdefine([], factory(root));\r\n\t} else if(typeof exports === 'object') {\r\n\t\tmodule.exports = factory(root);\r\n\t} else {\r\n\t\troot.iziToast = factory(root);\r\n\t}\r\n})(typeof global !== 'undefined' ? global : window || this.window || this.global, function (root) {\r\n\r\n\t'use strict';\r\n\r\n\t//\r\n\t// Variables\r\n\t//\r\n\tvar $iziToast = {},\r\n\t\tPLUGIN_NAME = 'iziToast',\r\n\t\tBODY = document.querySelector('body'),\r\n\t\tISMOBILE = (/Mobi/.test(navigator.userAgent)) ? true : false,\r\n\t\tISCHROME = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor),\r\n\t\tISFIREFOX = typeof InstallTrigger !== 'undefined',\r\n\t\tACCEPTSTOUCH = 'ontouchstart' in document.documentElement,\r\n\t\tPOSITIONS = ['bottomRight','bottomLeft','bottomCenter','topRight','topLeft','topCenter','center'],\r\n\t\tTHEMES = {\r\n\t\t\tinfo: {\r\n\t\t\t\tcolor: 'blue',\r\n\t\t\t\ticon: 'ico-info'\r\n\t\t\t},\r\n\t\t\tsuccess: {\r\n\t\t\t\tcolor: 'green',\r\n\t\t\t\ticon: 'ico-success'\r\n\t\t\t},\r\n\t\t\twarning: {\r\n\t\t\t\tcolor: 'orange',\r\n\t\t\t\ticon: 'ico-warning'\r\n\t\t\t},\r\n\t\t\terror: {\r\n\t\t\t\tcolor: 'red',\r\n\t\t\t\ticon: 'ico-error'\r\n\t\t\t},\r\n\t\t\tquestion: {\r\n\t\t\t\tcolor: 'yellow',\r\n\t\t\t\ticon: 'ico-question'\r\n\t\t\t}\r\n\t\t},\r\n\t\tMOBILEWIDTH = 568,\r\n\t\tCONFIG = {};\r\n\r\n\t$iziToast.children = {};\r\n\r\n\t// Default settings\r\n\tvar defaults = {\r\n\t\tid: null, \r\n\t\tclass: '',\r\n\t\ttitle: '',\r\n\t\ttitleColor: '',\r\n\t\ttitleSize: '',\r\n\t\ttitleLineHeight: '',\r\n\t\tmessage: '',\r\n\t\tmessageColor: '',\r\n\t\tmessageSize: '',\r\n\t\tmessageLineHeight: '',\r\n\t\tbackgroundColor: '',\r\n\t\ttheme: 'light', // dark\r\n\t\tcolor: '', // blue, red, green, yellow\r\n\t\ticon: '',\r\n\t\ticonText: '',\r\n\t\ticonColor: '',\r\n\t\ticonUrl: null,\r\n\t\timage: '',\r\n\t\timageWidth: 50,\r\n\t\tmaxWidth: null,\r\n\t\tzindex: null,\r\n\t\tlayout: 1,\r\n\t\tballoon: false,\r\n\t\tclose: true,\r\n\t\tcloseOnEscape: false,\r\n\t\tcloseOnClick: false,\r\n\t\tdisplayMode: 0,\r\n\t\tposition: 'bottomRight', // bottomRight, bottomLeft, topRight, topLeft, topCenter, bottomCenter, center\r\n\t\ttarget: '',\r\n\t\ttargetFirst: true,\r\n\t\ttimeout: 5000,\r\n\t\trtl: false,\r\n\t\tanimateInside: true,\r\n\t\tdrag: true,\r\n\t\tpauseOnHover: true,\r\n\t\tresetOnHover: false,\r\n\t\tprogressBar: true,\r\n\t\tprogressBarColor: '',\r\n\t\tprogressBarEasing: 'linear',\r\n\t\toverlay: false,\r\n\t\toverlayClose: false,\r\n\t\toverlayColor: 'rgba(0, 0, 0, 0.6)',\r\n\t\ttransitionIn: 'fadeInUp', // bounceInLeft, bounceInRight, bounceInUp, bounceInDown, fadeIn, fadeInDown, fadeInUp, fadeInLeft, fadeInRight, flipInX\r\n\t\ttransitionOut: 'fadeOut', // fadeOut, fadeOutUp, fadeOutDown, fadeOutLeft, fadeOutRight, flipOutX\r\n\t\ttransitionInMobile: 'fadeInUp',\r\n\t\ttransitionOutMobile: 'fadeOutDown',\r\n\t\tbuttons: {},\r\n\t\tinputs: {},\r\n\t\tonOpening: function () {},\r\n\t\tonOpened: function () {},\r\n\t\tonClosing: function () {},\r\n\t\tonClosed: function () {}\r\n\t};\r\n\r\n\t//\r\n\t// Methods\r\n\t//\r\n\r\n\r\n\t/**\r\n\t * Polyfill for remove() method\r\n\t */\r\n\tif(!('remove' in Element.prototype)) {\r\n\t    Element.prototype.remove = function() {\r\n\t        if(this.parentNode) {\r\n\t            this.parentNode.removeChild(this);\r\n\t        }\r\n\t    };\r\n\t}\r\n\r\n\t/*\r\n     * Polyfill for CustomEvent for IE >= 9\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill\r\n     */\r\n    if(typeof window.CustomEvent !== 'function') {\r\n        var CustomEventPolyfill = function (event, params) {\r\n            params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n            var evt = document.createEvent('CustomEvent');\r\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n            return evt;\r\n        };\r\n\r\n        CustomEventPolyfill.prototype = window.Event.prototype;\r\n\r\n        window.CustomEvent = CustomEventPolyfill;\r\n    }\r\n\r\n\t/**\r\n\t * A simple forEach() implementation for Arrays, Objects and NodeLists\r\n\t * @private\r\n\t * @param {Array|Object|NodeList} collection Collection of items to iterate\r\n\t * @param {Function} callback Callback function for each iteration\r\n\t * @param {Array|Object|NodeList} scope Object/NodeList/Array that forEach is iterating over (aka `this`)\r\n\t */\r\n\tvar forEach = function (collection, callback, scope) {\r\n\t\tif(Object.prototype.toString.call(collection) === '[object Object]') {\r\n\t\t\tfor (var prop in collection) {\r\n\t\t\t\tif(Object.prototype.hasOwnProperty.call(collection, prop)) {\r\n\t\t\t\t\tcallback.call(scope, collection[prop], prop, collection);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(collection){\r\n\t\t\t\tfor (var i = 0, len = collection.length; i < len; i++) {\r\n\t\t\t\t\tcallback.call(scope, collection[i], i, collection);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Merge defaults with user options\r\n\t * @private\r\n\t * @param {Object} defaults Default settings\r\n\t * @param {Object} options User options\r\n\t * @returns {Object} Merged values of defaults and options\r\n\t */\r\n\tvar extend = function (defaults, options) {\r\n\t\tvar extended = {};\r\n\t\tforEach(defaults, function (value, prop) {\r\n\t\t\textended[prop] = defaults[prop];\r\n\t\t});\r\n\t\tforEach(options, function (value, prop) {\r\n\t\t\textended[prop] = options[prop];\r\n\t\t});\r\n\t\treturn extended;\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Create a fragment DOM elements\r\n\t * @private\r\n\t */\r\n\tvar createFragElem = function(htmlStr) {\r\n\t\tvar frag = document.createDocumentFragment(),\r\n\t\t\ttemp = document.createElement('div');\r\n\t\ttemp.innerHTML = htmlStr;\r\n\t\twhile (temp.firstChild) {\r\n\t\t\tfrag.appendChild(temp.firstChild);\r\n\t\t}\r\n\t\treturn frag;\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Generate new ID\r\n\t * @private\r\n\t */\r\n\tvar generateId = function(params) {\r\n\t\tvar newId = btoa(encodeURIComponent(params));\r\n\t\treturn newId.replace(/=/g, \"\");\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Check if is a color\r\n\t * @private\r\n\t */\r\n\tvar isColor = function(color){\r\n\t\tif( color.substring(0,1) == '#' || color.substring(0,3) == 'rgb' || color.substring(0,3) == 'hsl' ){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Check if is a Base64 string\r\n\t * @private\r\n\t */\r\n\tvar isBase64 = function(str) {\r\n\t    try {\r\n\t        return btoa(atob(str)) == str;\r\n\t    } catch (err) {\r\n\t        return false;\r\n\t    }\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Drag method of toasts\r\n\t * @private\r\n\t */\r\n\tvar drag = function() {\r\n\t    \r\n\t    return {\r\n\t        move: function(toast, instance, settings, xpos) {\r\n\r\n\t        \tvar opacity,\r\n\t        \t\topacityRange = 0.3,\r\n\t        \t\tdistance = 180;\r\n\t            \r\n\t            if(xpos !== 0){\r\n\t            \t\r\n\t            \ttoast.classList.add(PLUGIN_NAME+'-dragged');\r\n\r\n\t            \ttoast.style.transform = 'translateX('+xpos + 'px)';\r\n\r\n\t\t            if(xpos > 0){\r\n\t\t            \topacity = (distance-xpos) / distance;\r\n\t\t            \tif(opacity < opacityRange){\r\n\t\t\t\t\t\t\tinstance.hide(extend(settings, { transitionOut: 'fadeOutRight', transitionOutMobile: 'fadeOutRight' }), toast, 'drag');\r\n\t\t\t\t\t\t}\r\n\t\t            } else {\r\n\t\t            \topacity = (distance+xpos) / distance;\r\n\t\t            \tif(opacity < opacityRange){\r\n\t\t\t\t\t\t\tinstance.hide(extend(settings, { transitionOut: 'fadeOutLeft', transitionOutMobile: 'fadeOutLeft' }), toast, 'drag');\r\n\t\t\t\t\t\t}\r\n\t\t            }\r\n\t\t\t\t\ttoast.style.opacity = opacity;\r\n\t\t\t\r\n\t\t\t\t\tif(opacity < opacityRange){\r\n\r\n\t\t\t\t\t\tif(ISCHROME || ISFIREFOX)\r\n\t\t\t\t\t\t\ttoast.style.left = xpos+'px';\r\n\r\n\t\t\t\t\t\ttoast.parentNode.style.opacity = opacityRange;\r\n\r\n\t\t                this.stopMoving(toast, null);\r\n\t\t\t\t\t}\r\n\t            }\r\n\r\n\t\t\t\t\r\n\t        },\r\n\t        startMoving: function(toast, instance, settings, e) {\r\n\r\n\t            e = e || window.event;\r\n\t            var posX = ((ACCEPTSTOUCH) ? e.touches[0].clientX : e.clientX),\r\n\t                toastLeft = toast.style.transform.replace('px)', '');\r\n\t                toastLeft = toastLeft.replace('translateX(', '');\r\n\t            var offsetX = posX - toastLeft;\r\n\r\n\t\t\t\tif(settings.transitionIn){\r\n\t\t\t\t\ttoast.classList.remove(settings.transitionIn);\r\n\t\t\t\t}\r\n\t\t\t\tif(settings.transitionInMobile){\r\n\t\t\t\t\ttoast.classList.remove(settings.transitionInMobile);\r\n\t\t\t\t}\r\n\t\t\t\ttoast.style.transition = '';\r\n\r\n\t            if(ACCEPTSTOUCH) {\r\n\t                document.ontouchmove = function(e) {\r\n\t                    e.preventDefault();\r\n\t                    e = e || window.event;\r\n\t                    var posX = e.touches[0].clientX,\r\n\t                        finalX = posX - offsetX;\r\n                        drag.move(toast, instance, settings, finalX);\r\n\t                };\r\n\t            } else {\r\n\t                document.onmousemove = function(e) {\r\n\t                    e.preventDefault();\r\n\t                    e = e || window.event;\r\n\t                    var posX = e.clientX,\r\n\t                        finalX = posX - offsetX;\r\n                        drag.move(toast, instance, settings, finalX);\r\n\t                };\r\n\t            }\r\n\r\n\t        },\r\n\t        stopMoving: function(toast, e) {\r\n\r\n\t            if(ACCEPTSTOUCH) {\r\n\t                document.ontouchmove = function() {};\r\n\t            } else {\r\n\t            \tdocument.onmousemove = function() {};\r\n\t            }\r\n\r\n\t\t\t\ttoast.style.opacity = '';\r\n\t\t\t\ttoast.style.transform = '';\r\n\r\n\t            if(toast.classList.contains(PLUGIN_NAME+'-dragged')){\r\n\t            \t\r\n\t            \ttoast.classList.remove(PLUGIN_NAME+'-dragged');\r\n\r\n\t\t\t\t\ttoast.style.transition = 'transform 0.4s ease, opacity 0.4s ease';\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\ttoast.style.transition = '';\r\n\t\t\t\t\t}, 400);\r\n\t            }\r\n\r\n\t        }\r\n\t    };\r\n\r\n\t}();\r\n\r\n\r\n\r\n\r\n\r\n\t$iziToast.setSetting = function (ref, option, value) {\r\n\r\n\t\t$iziToast.children[ref][option] = value;\r\n\r\n\t};\r\n\r\n\r\n\t$iziToast.getSetting = function (ref, option) {\r\n\r\n\t\treturn $iziToast.children[ref][option];\r\n\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Destroy the current initialization.\r\n\t * @public\r\n\t */\r\n\t$iziToast.destroy = function () {\r\n\r\n\t\tforEach(document.querySelectorAll('.'+PLUGIN_NAME+'-overlay'), function(element, index) {\r\n\t\t\telement.remove();\r\n\t\t});\r\n\r\n\t\tforEach(document.querySelectorAll('.'+PLUGIN_NAME+'-wrapper'), function(element, index) {\r\n\t\t\telement.remove();\r\n\t\t});\r\n\r\n\t\tforEach(document.querySelectorAll('.'+PLUGIN_NAME), function(element, index) {\r\n\t\t\telement.remove();\r\n\t\t});\r\n\r\n\t\tthis.children = {};\r\n\r\n\t\t// Remove event listeners\r\n\t\tdocument.removeEventListener(PLUGIN_NAME+'-opened', {}, false);\r\n\t\tdocument.removeEventListener(PLUGIN_NAME+'-opening', {}, false);\r\n\t\tdocument.removeEventListener(PLUGIN_NAME+'-closing', {}, false);\r\n\t\tdocument.removeEventListener(PLUGIN_NAME+'-closed', {}, false);\r\n\t\tdocument.removeEventListener('keyup', {}, false);\r\n\r\n\t\t// Reset variables\r\n\t\tCONFIG = {};\r\n\t};\r\n\r\n\t/**\r\n\t * Initialize Plugin\r\n\t * @public\r\n\t * @param {Object} options User settings\r\n\t */\r\n\t$iziToast.settings = function (options) {\r\n\r\n\t\t// Destroy any existing initializations\r\n\t\t$iziToast.destroy();\r\n\r\n\t\tCONFIG = options;\r\n\t\tdefaults = extend(defaults, options || {});\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Building themes functions.\r\n\t * @public\r\n\t * @param {Object} options User settings\r\n\t */\r\n\tforEach(THEMES, function (theme, name) {\r\n\r\n\t\t$iziToast[name] = function (options) {\r\n\r\n\t\t\tvar settings = extend(CONFIG, options || {});\r\n\t\t\tsettings = extend(theme, settings || {});\r\n\r\n\t\t\tthis.show(settings);\r\n\t\t};\r\n\r\n\t});\r\n\r\n\r\n\t/**\r\n\t * Do the calculation to move the progress bar\r\n\t * @private\r\n\t */\r\n\t$iziToast.progress = function (options, $toast, callback) {\r\n\r\n\r\n\t\tvar that = this,\r\n\t\t\tref = $toast.getAttribute('data-iziToast-ref'),\r\n\t\t\tsettings = extend(this.children[ref], options || {}),\r\n\t\t\t$elem = $toast.querySelector('.'+PLUGIN_NAME+'-progressbar div');\r\n\r\n\t    return {\r\n\t        start: function() {\r\n\r\n\t        \tif(typeof settings.time.REMAINING == 'undefined'){\r\n\r\n\t        \t\t$toast.classList.remove(PLUGIN_NAME+'-reseted');\r\n\r\n\t\t        \tif($elem !== null){\r\n\t\t\t\t\t\t$elem.style.transition = 'width '+ settings.timeout +'ms '+settings.progressBarEasing;\r\n\t\t\t\t\t\t$elem.style.width = '0%';\r\n\t\t\t\t\t}\r\n\r\n\t\t        \tsettings.time.START = new Date().getTime();\r\n\t\t        \tsettings.time.END = settings.time.START + settings.timeout;\r\n\t\t\t\t\tsettings.time.TIMER = setTimeout(function() {\r\n\r\n\t\t\t\t\t\tclearTimeout(settings.time.TIMER);\r\n\r\n\t\t\t\t\t\tif(!$toast.classList.contains(PLUGIN_NAME+'-closing')){\r\n\r\n\t\t\t\t\t\t\tthat.hide(settings, $toast, 'timeout');\r\n\r\n\t\t\t\t\t\t\tif(typeof callback === 'function'){\r\n\t\t\t\t\t\t\t\tcallback.apply(that);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}, settings.timeout);\t\t\t\r\n\t\t        \tthat.setSetting(ref, 'time', settings.time);\r\n\t        \t}\r\n\t        },\r\n\t        pause: function() {\r\n\r\n\t        \tif(typeof settings.time.START !== 'undefined' && !$toast.classList.contains(PLUGIN_NAME+'-paused') && !$toast.classList.contains(PLUGIN_NAME+'-reseted')){\r\n\r\n        \t\t\t$toast.classList.add(PLUGIN_NAME+'-paused');\r\n\r\n\t\t\t\t\tsettings.time.REMAINING = settings.time.END - new Date().getTime();\r\n\r\n\t\t\t\t\tclearTimeout(settings.time.TIMER);\r\n\r\n\t\t\t\t\tthat.setSetting(ref, 'time', settings.time);\r\n\r\n\t\t\t\t\tif($elem !== null){\r\n\t\t\t\t\t\tvar computedStyle = window.getComputedStyle($elem),\r\n\t\t\t\t\t\t\tpropertyWidth = computedStyle.getPropertyValue('width');\r\n\r\n\t\t\t\t\t\t$elem.style.transition = 'none';\r\n\t\t\t\t\t\t$elem.style.width = propertyWidth;\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(typeof callback === 'function'){\r\n\t\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t\tcallback.apply(that);\t\t\t\t\t\t\r\n\t\t\t\t\t\t}, 10);\r\n\t\t\t\t\t}\r\n        \t\t}\r\n\t        },\r\n\t        resume: function() {\r\n\r\n\t\t\t\tif(typeof settings.time.REMAINING !== 'undefined'){\r\n\r\n\t\t\t\t\t$toast.classList.remove(PLUGIN_NAME+'-paused');\r\n\r\n\t\t        \tif($elem !== null){\r\n\t\t\t\t\t\t$elem.style.transition = 'width '+ settings.time.REMAINING +'ms '+settings.progressBarEasing;\r\n\t\t\t\t\t\t$elem.style.width = '0%';\r\n\t\t\t\t\t}\r\n\r\n\t\t        \tsettings.time.END = new Date().getTime() + settings.time.REMAINING;\r\n\t\t\t\t\tsettings.time.TIMER = setTimeout(function() {\r\n\r\n\t\t\t\t\t\tclearTimeout(settings.time.TIMER);\r\n\r\n\t\t\t\t\t\tif(!$toast.classList.contains(PLUGIN_NAME+'-closing')){\r\n\r\n\t\t\t\t\t\t\tthat.hide(settings, $toast, 'timeout');\r\n\r\n\t\t\t\t\t\t\tif(typeof callback === 'function'){\r\n\t\t\t\t\t\t\t\tcallback.apply(that);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t}, settings.time.REMAINING);\r\n\r\n\t\t\t\t\tthat.setSetting(ref, 'time', settings.time);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.start();\r\n\t\t\t\t}\r\n\t        },\r\n\t        reset: function(){\r\n\r\n\t\t\t\tclearTimeout(settings.time.TIMER);\r\n\r\n\t\t\t\tdelete settings.time.REMAINING;\r\n\r\n\t\t\t\tthat.setSetting(ref, 'time', settings.time);\r\n\r\n\t\t\t\t$toast.classList.add(PLUGIN_NAME+'-reseted');\r\n\r\n\t\t\t\t$toast.classList.remove(PLUGIN_NAME+'-paused');\r\n\r\n\t\t\t\tif($elem !== null){\r\n\t\t\t\t\t$elem.style.transition = 'none';\r\n\t\t\t\t\t$elem.style.width = '100%';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof callback === 'function'){\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tcallback.apply(that);\t\t\t\t\t\t\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t}\r\n\t        }\r\n\t    };\r\n\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Close the specific Toast\r\n\t * @public\r\n\t * @param {Object} options User settings\r\n\t */\r\n\t$iziToast.hide = function (options, $toast, closedBy) {\r\n\r\n\t\tif(typeof $toast != 'object'){\r\n\t\t\t$toast = document.querySelector($toast);\r\n\t\t}\t\t\r\n\r\n\t\tvar that = this,\r\n\t\t\tsettings = extend(this.children[$toast.getAttribute('data-iziToast-ref')], options || {});\r\n\t\t\tsettings.closedBy = closedBy || null;\r\n\r\n\t\tdelete settings.time.REMAINING;\r\n\r\n\t\t$toast.classList.add(PLUGIN_NAME+'-closing');\r\n\r\n\t\t// Overlay\r\n\t\t(function(){\r\n\r\n\t\t\tvar $overlay = document.querySelector('.'+PLUGIN_NAME+'-overlay');\r\n\t\t\tif($overlay !== null){\r\n\t\t\t\tvar refs = $overlay.getAttribute('data-iziToast-ref');\t\t\r\n\t\t\t\t\trefs = refs.split(',');\r\n\t\t\t\tvar index = refs.indexOf(String(settings.ref));\r\n\r\n\t\t\t\tif(index !== -1){\r\n\t\t\t\t\trefs.splice(index, 1);\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t$overlay.setAttribute('data-iziToast-ref', refs.join());\r\n\r\n\t\t\t\tif(refs.length === 0){\r\n\t\t\t\t\t$overlay.classList.remove('fadeIn');\r\n\t\t\t\t\t$overlay.classList.add('fadeOut');\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t$overlay.remove();\r\n\t\t\t\t\t}, 700);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t})();\r\n\r\n\t\tif(settings.transitionIn){\r\n\t\t\t$toast.classList.remove(settings.transitionIn);\r\n\t\t} \r\n\r\n\t\tif(settings.transitionInMobile){\r\n\t\t\t$toast.classList.remove(settings.transitionInMobile);\r\n\t\t}\r\n\r\n\t\tif(ISMOBILE || window.innerWidth <= MOBILEWIDTH){\r\n\t\t\tif(settings.transitionOutMobile)\r\n\t\t\t\t$toast.classList.add(settings.transitionOutMobile);\r\n\t\t} else {\r\n\t\t\tif(settings.transitionOut)\r\n\t\t\t\t$toast.classList.add(settings.transitionOut);\r\n\t\t}\r\n\t\tvar H = $toast.parentNode.offsetHeight;\r\n\t\t\t\t$toast.parentNode.style.height = H+'px';\r\n\t\t\t\t$toast.style.pointerEvents = 'none';\r\n\t\t\r\n\t\tif(!ISMOBILE || window.innerWidth > MOBILEWIDTH){\r\n\t\t\t$toast.parentNode.style.transitionDelay = '0.2s';\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tvar event = new CustomEvent(PLUGIN_NAME+'-closing', {detail: settings, bubbles: true, cancelable: true});\r\n\t\t\tdocument.dispatchEvent(event);\r\n\t\t} catch(ex){\r\n\t\t\tconsole.warn(ex);\r\n\t\t}\r\n\r\n\t\tsetTimeout(function() {\r\n\t\t\t\r\n\t\t\t$toast.parentNode.style.height = '0px';\r\n\t\t\t$toast.parentNode.style.overflow = '';\r\n\r\n\t\t\tsetTimeout(function(){\r\n\t\t\t\t\r\n\t\t\t\tdelete that.children[settings.ref];\r\n\r\n\t\t\t\t$toast.parentNode.remove();\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar event = new CustomEvent(PLUGIN_NAME+'-closed', {detail: settings, bubbles: true, cancelable: true});\r\n\t\t\t\t\tdocument.dispatchEvent(event);\r\n\t\t\t\t} catch(ex){\r\n\t\t\t\t\tconsole.warn(ex);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(typeof settings.onClosed !== 'undefined'){\r\n\t\t\t\t\tsettings.onClosed.apply(null, [settings, $toast, closedBy]);\r\n\t\t\t\t}\r\n\r\n\t\t\t}, 1000);\r\n\t\t}, 200);\r\n\r\n\r\n\t\tif(typeof settings.onClosing !== 'undefined'){\r\n\t\t\tsettings.onClosing.apply(null, [settings, $toast, closedBy]);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Create and show the Toast\r\n\t * @public\r\n\t * @param {Object} options User settings\r\n\t */\r\n\t$iziToast.show = function (options) {\r\n\r\n\t\tvar that = this;\r\n\r\n\t\t// Merge user options with defaults\r\n\t\tvar settings = extend(CONFIG, options || {});\r\n\t\t\tsettings = extend(defaults, settings);\r\n\t\t\tsettings.time = {};\r\n\r\n\t\tif(settings.id === null){\r\n\t\t\tsettings.id = generateId(settings.title+settings.message+settings.color);\r\n\t\t}\r\n\r\n\t\tif(settings.displayMode === 1 || settings.displayMode == 'once'){\r\n\t\t\ttry {\r\n\t\t\t\tif(document.querySelectorAll('.'+PLUGIN_NAME+'#'+settings.id).length > 0){\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} catch (exc) {\r\n\t\t\t\tconsole.warn('['+PLUGIN_NAME+'] Could not find an element with this selector: '+'#'+settings.id+'. Try to set an valid id.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(settings.displayMode === 2 || settings.displayMode == 'replace'){\r\n\t\t\ttry {\r\n\t\t\t\tforEach(document.querySelectorAll('.'+PLUGIN_NAME+'#'+settings.id), function(element, index) {\r\n\t\t\t\t\tthat.hide(settings, element, 'replaced');\r\n\t\t\t\t});\r\n\t\t\t} catch (exc) {\r\n\t\t\t\tconsole.warn('['+PLUGIN_NAME+'] Could not find an element with this selector: '+'#'+settings.id+'. Try to set an valid id.');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsettings.ref = new Date().getTime() + Math.floor((Math.random() * 10000000) + 1);\r\n\r\n\t\t$iziToast.children[settings.ref] = settings;\r\n\r\n\t\tvar $DOM = {\r\n\t\t\tbody: document.querySelector('body'),\r\n\t\t\toverlay: document.createElement('div'),\r\n\t\t\ttoast: document.createElement('div'),\r\n\t\t\ttoastBody: document.createElement('div'),\r\n\t\t\ttoastTexts: document.createElement('div'),\r\n\t\t\ttoastCapsule: document.createElement('div'),\r\n\t\t\tcover: document.createElement('div'),\r\n\t\t\tbuttons: document.createElement('div'),\r\n\t\t\tinputs: document.createElement('div'),\r\n\t\t\ticon: !settings.iconUrl ? document.createElement('i') : document.createElement('img'),\r\n\t\t\twrapper: null\r\n\t\t};\r\n\r\n\t\t$DOM.toast.setAttribute('data-iziToast-ref', settings.ref);\r\n\t\t$DOM.toast.appendChild($DOM.toastBody);\r\n\t\t$DOM.toastCapsule.appendChild($DOM.toast);\r\n\r\n\t\t// CSS Settings\r\n\t\t(function(){\r\n\r\n\t\t\t$DOM.toast.classList.add(PLUGIN_NAME);\r\n\t\t\t$DOM.toast.classList.add(PLUGIN_NAME+'-opening');\r\n\t\t\t$DOM.toastCapsule.classList.add(PLUGIN_NAME+'-capsule');\r\n\t\t\t$DOM.toastBody.classList.add(PLUGIN_NAME + '-body');\r\n\t\t\t$DOM.toastTexts.classList.add(PLUGIN_NAME + '-texts');\r\n\r\n\t\t\tif(ISMOBILE || window.innerWidth <= MOBILEWIDTH){\r\n\t\t\t\tif(settings.transitionInMobile)\r\n\t\t\t\t\t$DOM.toast.classList.add(settings.transitionInMobile);\r\n\t\t\t} else {\r\n\t\t\t\tif(settings.transitionIn)\r\n\t\t\t\t\t$DOM.toast.classList.add(settings.transitionIn);\r\n\t\t\t}\r\n\r\n\t\t\tif(settings.class){\r\n\t\t\t\tvar classes = settings.class.split(' ');\r\n\t\t\t\tforEach(classes, function (value, index) {\r\n\t\t\t\t\t$DOM.toast.classList.add(value);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif(settings.id){ $DOM.toast.id = settings.id; }\r\n\r\n\t\t\tif(settings.rtl){\r\n\t\t\t\t$DOM.toast.classList.add(PLUGIN_NAME + '-rtl');\r\n\t\t\t\t$DOM.toast.setAttribute('dir', 'rtl');\r\n\t\t\t}\r\n\r\n\t\t\tif(settings.layout > 1){ $DOM.toast.classList.add(PLUGIN_NAME+'-layout'+settings.layout); }\r\n\r\n\t\t\tif(settings.balloon){ $DOM.toast.classList.add(PLUGIN_NAME+'-balloon'); }\r\n\r\n\t\t\tif(settings.maxWidth){\r\n\t\t\t\tif( !isNaN(settings.maxWidth) ){\r\n\t\t\t\t\t$DOM.toast.style.maxWidth = settings.maxWidth+'px';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$DOM.toast.style.maxWidth = settings.maxWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(settings.theme !== '' || settings.theme !== 'light') {\r\n\r\n\t\t\t\t$DOM.toast.classList.add(PLUGIN_NAME+'-theme-'+settings.theme);\r\n\t\t\t}\r\n\r\n\t\t\tif(settings.color) { //#, rgb, rgba, hsl\r\n\t\t\t\t\r\n\t\t\t\tif( isColor(settings.color) ){\r\n\t\t\t\t\t$DOM.toast.style.background = settings.color;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$DOM.toast.classList.add(PLUGIN_NAME+'-color-'+settings.color);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(settings.backgroundColor) {\r\n\t\t\t\t$DOM.toast.style.background = settings.backgroundColor;\r\n\t\t\t\tif(settings.balloon){\r\n\t\t\t\t\t$DOM.toast.style.borderColor = settings.backgroundColor;\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\t// Cover image\r\n\t\t(function(){\r\n\t\t\tif(settings.image) {\r\n\t\t\t\t$DOM.cover.classList.add(PLUGIN_NAME + '-cover');\r\n\t\t\t\t$DOM.cover.style.width = settings.imageWidth + 'px';\r\n\r\n\t\t\t\tif(isBase64(settings.image.replace(/ /g,''))){\r\n\t\t\t\t\t$DOM.cover.style.backgroundImage = 'url(data:image/png;base64,' + settings.image.replace(/ /g,'') + ')';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$DOM.cover.style.backgroundImage = 'url(' + settings.image + ')';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(settings.rtl){\r\n\t\t\t\t\t$DOM.toastBody.style.marginRight = (settings.imageWidth + 10) + 'px';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$DOM.toastBody.style.marginLeft = (settings.imageWidth + 10) + 'px';\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t$DOM.toast.appendChild($DOM.cover);\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\t// Button close\r\n\t\t(function(){\r\n\t\t\tif(settings.close){\r\n\t\t\t\t\r\n\t\t\t\t$DOM.buttonClose = document.createElement('button');\r\n\t\t\t\t$DOM.buttonClose.type = 'button';\r\n\t\t\t\t$DOM.buttonClose.classList.add(PLUGIN_NAME + '-close');\r\n\t\t\t\t$DOM.buttonClose.addEventListener('click', function (e) {\r\n\t\t\t\t\tvar button = e.target;\r\n\t\t\t\t\tthat.hide(settings, $DOM.toast, 'button');\r\n\t\t\t\t});\r\n\t\t\t\t$DOM.toast.appendChild($DOM.buttonClose);\r\n\t\t\t} else {\r\n\t\t\t\tif(settings.rtl){\r\n\t\t\t\t\t$DOM.toast.style.paddingLeft = '18px';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$DOM.toast.style.paddingRight = '18px';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\t// Progress Bar & Timeout\r\n\t\t(function(){\r\n\r\n\t\t\tif(settings.progressBar){\r\n\t\t\t\t$DOM.progressBar = document.createElement('div');\r\n\t\t\t\t$DOM.progressBarDiv = document.createElement('div');\r\n\t\t\t\t$DOM.progressBar.classList.add(PLUGIN_NAME + '-progressbar');\r\n\t\t\t\t$DOM.progressBarDiv.style.background = settings.progressBarColor;\r\n\t\t\t\t$DOM.progressBar.appendChild($DOM.progressBarDiv);\r\n\t\t\t\t$DOM.toast.appendChild($DOM.progressBar);\r\n\t\t\t}\r\n\r\n\t\t\tif(settings.timeout) {\r\n\r\n\t\t\t\tif(settings.pauseOnHover && !settings.resetOnHover){\r\n\t\t\t\t\t\r\n\t\t\t\t\t$DOM.toast.addEventListener('mouseenter', function (e) {\r\n\t\t\t\t\t\tthat.progress(settings, $DOM.toast).pause();\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$DOM.toast.addEventListener('mouseleave', function (e) {\r\n\t\t\t\t\t\tthat.progress(settings, $DOM.toast).resume();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(settings.resetOnHover){\r\n\r\n\t\t\t\t\t$DOM.toast.addEventListener('mouseenter', function (e) {\r\n\t\t\t\t\t\tthat.progress(settings, $DOM.toast).reset();\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$DOM.toast.addEventListener('mouseleave', function (e) {\r\n\t\t\t\t\t\tthat.progress(settings, $DOM.toast).start();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\t// Icon\r\n\t\t(function(){\r\n\r\n\t\t\tif(settings.iconUrl) {\r\n\r\n\t\t\t\t$DOM.icon.setAttribute('class', PLUGIN_NAME + '-icon');\r\n\t\t\t\t$DOM.icon.setAttribute('src', settings.iconUrl);\r\n\r\n\t\t\t} else if(settings.icon) {\r\n\t\t\t\t$DOM.icon.setAttribute('class', PLUGIN_NAME + '-icon ' + settings.icon);\r\n\t\t\t\t\r\n\t\t\t\tif(settings.iconText){\r\n\t\t\t\t\t$DOM.icon.appendChild(document.createTextNode(settings.iconText));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(settings.iconColor){\r\n\t\t\t\t\t$DOM.icon.style.color = settings.iconColor;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif(settings.icon || settings.iconUrl) {\r\n\r\n\t\t\t\tif(settings.rtl){\r\n\t\t\t\t\t$DOM.toastBody.style.paddingRight = '33px';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$DOM.toastBody.style.paddingLeft = '33px';\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$DOM.toastBody.appendChild($DOM.icon);\r\n\t\t\t}\r\n\r\n\t\t})();\r\n\r\n\t\t// Title & Message\r\n\t\t(function(){\r\n\t\t\tif(settings.title.length > 0) {\r\n\r\n\t\t\t\t$DOM.strong = document.createElement('strong');\r\n\t\t\t\t$DOM.strong.classList.add(PLUGIN_NAME + '-title');\r\n\t\t\t\t$DOM.strong.appendChild(createFragElem(settings.title));\r\n\t\t\t\t$DOM.toastTexts.appendChild($DOM.strong);\r\n\r\n\t\t\t\tif(settings.titleColor) {\r\n\t\t\t\t\t$DOM.strong.style.color = settings.titleColor;\r\n\t\t\t\t}\r\n\t\t\t\tif(settings.titleSize) {\r\n\t\t\t\t\tif( !isNaN(settings.titleSize) ){\r\n\t\t\t\t\t\t$DOM.strong.style.fontSize = settings.titleSize+'px';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$DOM.strong.style.fontSize = settings.titleSize;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(settings.titleLineHeight) {\r\n\t\t\t\t\tif( !isNaN(settings.titleSize) ){\r\n\t\t\t\t\t\t$DOM.strong.style.lineHeight = settings.titleLineHeight+'px';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$DOM.strong.style.lineHeight = settings.titleLineHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(settings.message.length > 0) {\r\n\r\n\t\t\t\t$DOM.p = document.createElement('p');\r\n\t\t\t\t$DOM.p.classList.add(PLUGIN_NAME + '-message');\r\n\t\t\t\t$DOM.p.appendChild(createFragElem(settings.message));\r\n\t\t\t\t$DOM.toastTexts.appendChild($DOM.p);\r\n\r\n\t\t\t\tif(settings.messageColor) {\r\n\t\t\t\t\t$DOM.p.style.color = settings.messageColor;\r\n\t\t\t\t}\r\n\t\t\t\tif(settings.messageSize) {\r\n\t\t\t\t\tif( !isNaN(settings.titleSize) ){\r\n\t\t\t\t\t\t$DOM.p.style.fontSize = settings.messageSize+'px';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$DOM.p.style.fontSize = settings.messageSize;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(settings.messageLineHeight) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif( !isNaN(settings.titleSize) ){\r\n\t\t\t\t\t\t$DOM.p.style.lineHeight = settings.messageLineHeight+'px';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$DOM.p.style.lineHeight = settings.messageLineHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(settings.title.length > 0 && settings.message.length > 0) {\r\n\t\t\t\tif(settings.rtl){\r\n\t\t\t\t\t$DOM.strong.style.marginLeft = '10px';\r\n\t\t\t\t} else if(settings.layout !== 2 && !settings.rtl) {\r\n\t\t\t\t\t$DOM.strong.style.marginRight = '10px';\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\t$DOM.toastBody.appendChild($DOM.toastTexts);\r\n\r\n\t\t// Inputs\r\n\t\tvar $inputs;\r\n\t\t(function(){\r\n\t\t\tif(settings.inputs.length > 0) {\r\n\r\n\t\t\t\t$DOM.inputs.classList.add(PLUGIN_NAME + '-inputs');\r\n\r\n\t\t\t\tforEach(settings.inputs, function (value, index) {\r\n\t\t\t\t\t$DOM.inputs.appendChild(createFragElem(value[0]));\r\n\r\n\t\t\t\t\t$inputs = $DOM.inputs.childNodes;\r\n\r\n\t\t\t\t\t$inputs[index].classList.add(PLUGIN_NAME + '-inputs-child');\r\n\r\n\t\t\t\t\tif(value[3]){\r\n\t\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t\t$inputs[index].focus();\r\n\t\t\t\t\t\t}, 300);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$inputs[index].addEventListener(value[1], function (e) {\r\n\t\t\t\t\t\tvar ts = value[2];\r\n\t\t\t\t\t\treturn ts(that, $DOM.toast, this, e);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t$DOM.toastBody.appendChild($DOM.inputs);\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\t// Buttons\r\n\t\t(function(){\r\n\t\t\tif(settings.buttons.length > 0) {\r\n\r\n\t\t\t\t$DOM.buttons.classList.add(PLUGIN_NAME + '-buttons');\r\n\r\n\t\t\t\tforEach(settings.buttons, function (value, index) {\r\n\t\t\t\t\t$DOM.buttons.appendChild(createFragElem(value[0]));\r\n\r\n\t\t\t\t\tvar $btns = $DOM.buttons.childNodes;\r\n\r\n\t\t\t\t\t$btns[index].classList.add(PLUGIN_NAME + '-buttons-child');\r\n\r\n\t\t\t\t\tif(value[2]){\r\n\t\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t\t$btns[index].focus();\r\n\t\t\t\t\t\t}, 300);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$btns[index].addEventListener('click', function (e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tvar ts = value[1];\r\n\t\t\t\t\t\treturn ts(that, $DOM.toast, this, e, $inputs);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t$DOM.toastBody.appendChild($DOM.buttons);\r\n\t\t})();\r\n\r\n\t\tif(settings.message.length > 0 && (settings.inputs.length > 0 || settings.buttons.length > 0)) {\r\n\t\t\t$DOM.p.style.marginBottom = '0';\r\n\t\t}\r\n\r\n\t\tif(settings.inputs.length > 0 || settings.buttons.length > 0){\r\n\t\t\tif(settings.rtl){\r\n\t\t\t\t$DOM.toastTexts.style.marginLeft = '10px';\r\n\t\t\t} else {\r\n\t\t\t\t$DOM.toastTexts.style.marginRight = '10px';\r\n\t\t\t}\r\n\t\t\tif(settings.inputs.length > 0 && settings.buttons.length > 0){\r\n\t\t\t\tif(settings.rtl){\r\n\t\t\t\t\t$DOM.inputs.style.marginLeft = '8px';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$DOM.inputs.style.marginRight = '8px';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Wrap\r\n\t\t(function(){\r\n\t\t\t$DOM.toastCapsule.style.visibility = 'hidden';\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tvar H = $DOM.toast.offsetHeight;\r\n\t\t\t\tvar style = $DOM.toast.currentStyle || window.getComputedStyle($DOM.toast);\r\n\t\t\t\tvar marginTop = style.marginTop;\r\n\t\t\t\t\tmarginTop = marginTop.split('px');\r\n\t\t\t\t\tmarginTop = parseInt(marginTop[0]);\r\n\t\t\t\tvar marginBottom = style.marginBottom;\r\n\t\t\t\t\tmarginBottom = marginBottom.split('px');\r\n\t\t\t\t\tmarginBottom = parseInt(marginBottom[0]);\r\n\r\n\t\t\t\t$DOM.toastCapsule.style.visibility = '';\r\n\t\t\t\t$DOM.toastCapsule.style.height = (H+marginBottom+marginTop)+'px';\r\n\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t$DOM.toastCapsule.style.height = 'auto';\r\n\t\t\t\t\tif(settings.target){\r\n\t\t\t\t\t\t$DOM.toastCapsule.style.overflow = 'visible';\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 500);\r\n\r\n\t\t\t\tif(settings.timeout) {\r\n\t\t\t\t\tthat.progress(settings, $DOM.toast).start();\r\n\t\t\t\t}\r\n\t\t\t}, 100);\r\n\t\t})();\r\n\r\n\t\t// Target\r\n\t\t(function(){\r\n\t\t\tvar position = settings.position;\r\n\r\n\t\t\tif(settings.target){\r\n\r\n\t\t\t\t$DOM.wrapper = document.querySelector(settings.target);\r\n\t\t\t\t$DOM.wrapper.classList.add(PLUGIN_NAME + '-target');\r\n\r\n\t\t\t\tif(settings.targetFirst) {\r\n\t\t\t\t\t$DOM.wrapper.insertBefore($DOM.toastCapsule, $DOM.wrapper.firstChild);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$DOM.wrapper.appendChild($DOM.toastCapsule);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif( POSITIONS.indexOf(settings.position) == -1 ){\r\n\t\t\t\t\tconsole.warn('['+PLUGIN_NAME+'] Incorrect position.\\nIt can be › ' + POSITIONS);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(ISMOBILE || window.innerWidth <= MOBILEWIDTH){\r\n\t\t\t\t\tif(settings.position == 'bottomLeft' || settings.position == 'bottomRight' || settings.position == 'bottomCenter'){\r\n\t\t\t\t\t\tposition = PLUGIN_NAME+'-wrapper-bottomCenter';\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(settings.position == 'topLeft' || settings.position == 'topRight' || settings.position == 'topCenter'){\r\n\t\t\t\t\t\tposition = PLUGIN_NAME+'-wrapper-topCenter';\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tposition = PLUGIN_NAME+'-wrapper-center';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tposition = PLUGIN_NAME+'-wrapper-'+position;\r\n\t\t\t\t}\r\n\t\t\t\t$DOM.wrapper = document.querySelector('.' + PLUGIN_NAME + '-wrapper.'+position);\r\n\r\n\t\t\t\tif(!$DOM.wrapper) {\r\n\t\t\t\t\t$DOM.wrapper = document.createElement('div');\r\n\t\t\t\t\t$DOM.wrapper.classList.add(PLUGIN_NAME + '-wrapper');\r\n\t\t\t\t\t$DOM.wrapper.classList.add(position);\r\n\t\t\t\t\tdocument.body.appendChild($DOM.wrapper);\r\n\t\t\t\t}\r\n\t\t\t\tif(settings.position == 'topLeft' || settings.position == 'topCenter' || settings.position == 'topRight'){\r\n\t\t\t\t\t$DOM.wrapper.insertBefore($DOM.toastCapsule, $DOM.wrapper.firstChild);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$DOM.wrapper.appendChild($DOM.toastCapsule);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!isNaN(settings.zindex)) {\r\n\t\t\t\t$DOM.wrapper.style.zIndex = settings.zindex;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn('['+PLUGIN_NAME+'] Invalid zIndex.');\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\t// Overlay\r\n\t\t(function(){\r\n\r\n\t\t\tif(settings.overlay) {\r\n\r\n\t\t\t\tif( document.querySelector('.'+PLUGIN_NAME+'-overlay.fadeIn') !== null ){\r\n\r\n\t\t\t\t\t$DOM.overlay = document.querySelector('.'+PLUGIN_NAME+'-overlay');\r\n\t\t\t\t\t$DOM.overlay.setAttribute('data-iziToast-ref', $DOM.overlay.getAttribute('data-iziToast-ref') + ',' + settings.ref);\r\n\r\n\t\t\t\t\tif(!isNaN(settings.zindex) && settings.zindex !== null) {\r\n\t\t\t\t\t\t$DOM.overlay.style.zIndex = settings.zindex-1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t$DOM.overlay.classList.add(PLUGIN_NAME+'-overlay');\r\n\t\t\t\t\t$DOM.overlay.classList.add('fadeIn');\r\n\t\t\t\t\t$DOM.overlay.style.background = settings.overlayColor;\r\n\t\t\t\t\t$DOM.overlay.setAttribute('data-iziToast-ref', settings.ref);\r\n\t\t\t\t\tif(!isNaN(settings.zindex) && settings.zindex !== null) {\r\n\t\t\t\t\t\t$DOM.overlay.style.zIndex = settings.zindex-1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdocument.querySelector('body').appendChild($DOM.overlay);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(settings.overlayClose) {\r\n\r\n\t\t\t\t\t$DOM.overlay.removeEventListener('click', {});\r\n\t\t\t\t\t$DOM.overlay.addEventListener('click', function (e) {\r\n\t\t\t\t\t\tthat.hide(settings, $DOM.toast, 'overlay');\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$DOM.overlay.removeEventListener('click', {});\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t})();\r\n\r\n\t\t// Inside animations\r\n\t\t(function(){\r\n\t\t\tif(settings.animateInside){\r\n\t\t\t\t$DOM.toast.classList.add(PLUGIN_NAME+'-animateInside');\r\n\t\t\t\r\n\t\t\t\tvar animationTimes = [200, 100, 300];\r\n\t\t\t\tif(settings.transitionIn == 'bounceInLeft' || settings.transitionIn == 'bounceInRight'){\r\n\t\t\t\t\tanimationTimes = [400, 200, 400];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(settings.title.length > 0) {\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t$DOM.strong.classList.add('slideIn');\r\n\t\t\t\t\t}, animationTimes[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(settings.message.length > 0) {\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t$DOM.p.classList.add('slideIn');\r\n\t\t\t\t\t}, animationTimes[1]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(settings.icon || settings.iconUrl) {\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t$DOM.icon.classList.add('revealIn');\r\n\t\t\t\t\t}, animationTimes[2]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar counter = 150;\r\n\t\t\t\tif(settings.buttons.length > 0 && $DOM.buttons) {\r\n\r\n\t\t\t\t\tsetTimeout(function(){\r\n\r\n\t\t\t\t\t\tforEach($DOM.buttons.childNodes, function(element, index) {\r\n\r\n\t\t\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t\t\telement.classList.add('revealIn');\r\n\t\t\t\t\t\t\t}, counter);\r\n\t\t\t\t\t\t\tcounter = counter + 150;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}, settings.inputs.length > 0 ? 150 : 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(settings.inputs.length > 0 && $DOM.inputs) {\r\n\t\t\t\t\tcounter = 150;\r\n\t\t\t\t\tforEach($DOM.inputs.childNodes, function(element, index) {\r\n\r\n\t\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t\telement.classList.add('revealIn');\r\n\t\t\t\t\t\t}, counter);\r\n\t\t\t\t\t\tcounter = counter + 150;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\tsettings.onOpening.apply(null, [settings, $DOM.toast]);\r\n\r\n\t\ttry {\r\n\t\t\tvar event = new CustomEvent(PLUGIN_NAME + '-opening', {detail: settings, bubbles: true, cancelable: true});\r\n\t\t\tdocument.dispatchEvent(event);\r\n\t\t} catch(ex){\r\n\t\t\tconsole.warn(ex);\r\n\t\t}\r\n\r\n\t\tsetTimeout(function() {\r\n\r\n\t\t\t$DOM.toast.classList.remove(PLUGIN_NAME+'-opening');\r\n\t\t\t$DOM.toast.classList.add(PLUGIN_NAME+'-opened');\r\n\r\n\t\t\ttry {\r\n\t\t\t\tvar event = new CustomEvent(PLUGIN_NAME + '-opened', {detail: settings, bubbles: true, cancelable: true});\r\n\t\t\t\tdocument.dispatchEvent(event);\r\n\t\t\t} catch(ex){\r\n\t\t\t\tconsole.warn(ex);\r\n\t\t\t}\r\n\r\n\t\t\tsettings.onOpened.apply(null, [settings, $DOM.toast]);\r\n\t\t}, 1000);\r\n\r\n\t\tif(settings.drag){\r\n\r\n\t\t\tif(ACCEPTSTOUCH) {\r\n\r\n\t\t\t    $DOM.toast.addEventListener('touchstart', function(e) {\r\n\t\t\t        drag.startMoving(this, that, settings, e);\r\n\t\t\t    }, false);\r\n\r\n\t\t\t    $DOM.toast.addEventListener('touchend', function(e) {\r\n\t\t\t        drag.stopMoving(this, e);\r\n\t\t\t    }, false);\r\n\t\t\t} else {\r\n\r\n\t\t\t    $DOM.toast.addEventListener('mousedown', function(e) {\r\n\t\t\t    \te.preventDefault();\r\n\t\t\t        drag.startMoving(this, that, settings, e);\r\n\t\t\t    }, false);\r\n\r\n\t\t\t    $DOM.toast.addEventListener('mouseup', function(e) {\r\n\t\t\t    \te.preventDefault();\r\n\t\t\t        drag.stopMoving(this, e);\r\n\t\t\t    }, false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(settings.closeOnEscape) {\r\n\r\n\t\t\tdocument.addEventListener('keyup', function (evt) {\r\n\t\t\t\tevt = evt || window.event;\r\n\t\t\t\tif(evt.keyCode == 27) {\r\n\t\t\t\t    that.hide(settings, $DOM.toast, 'esc');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(settings.closeOnClick) {\r\n\t\t\t$DOM.toast.addEventListener('click', function (evt) {\r\n\t\t\t\tthat.hide(settings, $DOM.toast, 'toast');\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthat.toast = $DOM.toast;\t\t\r\n\t};\r\n\t\r\n\r\n\treturn $iziToast;\r\n});","(() => {\n  const refs = {\n    openModalBtnDevelopers: document.querySelector('[modal-developers-open]'),\n    closeModalBtnDevelopers: document.querySelector('[modal-developers-close]'),\n    modalDeveloper: document.querySelector('[data-modal-developer]'),\n  };\n\n  refs.openModalBtnDevelopers.addEventListener('click', openModalDeveloper);\n  refs.closeModalBtnDevelopers.addEventListener('click', closeModalDeveloper);\n  refs.modalDeveloper.addEventListener('click', onBackdropClickDeveloper);\n\n  function openModalDeveloper() {\n    refs.modalDeveloper.classList.remove('is-hidden__developers');\n  }\n  function closeModalDeveloper() {\n    refs.modalDeveloper.classList.add('is-hidden__developers');\n  }\n  function onBackdropClickDeveloper(event) {\n    if (event.currentTarget === event.target) {\n      closeModalDeveloper();\n    }\n  }\n  document.addEventListener('keydown', e => {\n    if (e.code === 'Escape') {\n      closeModalDeveloper();\n    }\n  });\n})();\n"],"names":["$135e783d297c6b1e$var$l","isAuthenticated","this","uid","toKey","isEqual","t","constructor","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","$135e783d297c6b1e$var$f","$135e783d297c6b1e$var$d","o","$135e783d297c6b1e$var$m","e","logLevel","u","DEBUG","n","map","$135e783d297c6b1e$var$_","debug","$135e783d297c6b1e$var$p","ERROR","error","$135e783d297c6b1e$var$y","WARN","warn","JSON","stringify","e1","$135e783d297c6b1e$var$g","Error","$135e783d297c6b1e$var$v","$135e783d297c6b1e$var$b","$135e783d297c6b1e$var$T","$135e783d297c6b1e$var$I","$135e783d297c6b1e$var$A","$135e783d297c6b1e$var$R","$135e783d297c6b1e$var$P","$135e783d297c6b1e$var$N","$135e783d297c6b1e$var$D","$135e783d297c6b1e$var$$","$135e783d297c6b1e$var$x","$135e783d297c6b1e$var$F","$135e783d297c6b1e$var$S","$135e783d297c6b1e$var$q","$135e783d297c6b1e$var$O","$135e783d297c6b1e$var$k","$135e783d297c6b1e$export$8fada0bf726bf278","c","super","code","message","toString","name","$135e783d297c6b1e$var$U","user","type","headers","Map","set","$135e783d297c6b1e$var$j","getToken","Promise","resolve","invalidateToken","start","enqueueRetryable","shutdown","$135e783d297c6b1e$var$z","auth","then","accessToken","getUid","t1","onInit","$135e783d297c6b1e$var$G","l","getAuthHeaderValueForFirstParty","h","i","r","$135e783d297c6b1e$var$W","$135e783d297c6b1e$var$K","value","length","$135e783d297c6b1e$var$Q","appCheck","token","t2","m","$135e783d297c6b1e$var$Y","s","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","$135e783d297c6b1e$var$H","static","isDefaultDatabase","database","projectId","$135e783d297c6b1e$var$J","len","comparator","child","t3","segments","slice","offset","limit","forEach","push","construct","popFirst","popLast","firstSegment","lastSegment","get","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","$135e783d297c6b1e$var$X","canonicalString","join","t4","indexOf","split","filter","$135e783d297c6b1e$var$Z","$135e783d297c6b1e$var$tt","test","replace","isValidIdentifier","isKeyField","$135e783d297c6b1e$var$et","fromString","emptyPath","collectionGroup","path","hasCollectionId","getCollectionGroup","getCollectionPath","$135e783d297c6b1e$var$nt","$135e783d297c6b1e$var$rt","isDocumentKey","$135e783d297c6b1e$var$it","t5","substring","Array","$135e783d297c6b1e$var$ot","_delegate","$135e783d297c6b1e$var$at","$135e783d297c6b1e$var$ht","BatchGetDocuments","Commit","RunQuery","$135e783d297c6b1e$var$lt","$135e783d297c6b1e$var$ft","$135e783d297c6b1e$var$dt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","$135e783d297c6b1e$var$wt","v","t7","e2","T","I","A","R","e3","n1","databaseInfo","p","g","V","async","P","method","body","t6","status","statusText","ok","json","$135e783d297c6b1e$var$mt","self","crypto","msCrypto","Uint8Array","getRandomValues","e4","floor","random","$135e783d297c6b1e$var$pt","charAt","$135e783d297c6b1e$var$yt","$135e783d297c6b1e$var$_t","t8","every","$135e783d297c6b1e$export$d9bcbd5e1ff81430","fromMillis","Date","now","getTime","toDate","toMillis","seconds","nanoseconds","_compareTo","toJSON","valueOf","String","padStart","$135e783d297c6b1e$var$vt","compareTo","timestamp","toMicroseconds","toTimestamp","$135e783d297c6b1e$var$bt","Object","prototype","hasOwnProperty","call","$135e783d297c6b1e$var$Et","$135e783d297c6b1e$var$Tt","insert","root","copy","$135e783d297c6b1e$var$At","BLACK","remove","key","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","$135e783d297c6b1e$var$It","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","EMPTY","getNext","nodeStack","pop","isReverse","hasNext","peek","color","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","RED","checkMaxDepth","check","pow","$135e783d297c6b1e$var$Rt","has","data","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","$135e783d297c6b1e$var$Pt","add","delete","unionWith","t9","iter","$135e783d297c6b1e$var$Vt","t10","fields","covers","t11","sort","$135e783d297c6b1e$var$_iterator","Symbol","iterator","$135e783d297c6b1e$var$Nt","atob","t12","e5","fromCharCode","next","binaryString","charCodeAt","done","toBase64","btoa","toUint8Array","approximateByteSize","EMPTY_BYTE_STRING","$135e783d297c6b1e$var$Dt","RegExp","$135e783d297c6b1e$var$$t","exec","substr","Number","nanos","$135e783d297c6b1e$var$xt","$135e783d297c6b1e$var$Ft","fromBase64String","fromUint8Array","$135e783d297c6b1e$var$St","mapValue","__type__","stringValue","$135e783d297c6b1e$var$qt","__previous_value__","$135e783d297c6b1e$var$Ot","__local_write_time__","timestampValue","$135e783d297c6b1e$var$Ct","t13","$135e783d297c6b1e$var$Lt","t14","e6","n2","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","t15","$135e783d297c6b1e$var$Kt","$135e783d297c6b1e$var$Qt","t21","assign","$135e783d297c6b1e$var$Yt","field","getFieldsMap","setAll","t22","applyChanges","s1","e9","n4","e8","clone","$135e783d297c6b1e$var$Ht","empty","convertToFoundDocument","version","documentType","documentState","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","readTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","$135e783d297c6b1e$var$fe","explicitOrderBy","filters","limitType","startAt","endAt","q","O","$135e783d297c6b1e$var$ge","t26","e11","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","k","$135e783d297c6b1e$var$ve","_","$135e783d297c6b1e$var$be","$135e783d297c6b1e$var$Ee","elements","$135e783d297c6b1e$var$Te","$135e783d297c6b1e$var$Ie","C","L","$135e783d297c6b1e$var$Ae","transform","$135e783d297c6b1e$var$Re","isNone","updateTime","exists","$135e783d297c6b1e$var$Pe","$135e783d297c6b1e$var$Ve","getFieldMask","precondition","fieldTransforms","$135e783d297c6b1e$var$Ne","fieldMask","$135e783d297c6b1e$var$De","$135e783d297c6b1e$var$$e","$135e783d297c6b1e$var$Se","$135e783d297c6b1e$var$qe","toISOString","$135e783d297c6b1e$var$Oe","$135e783d297c6b1e$var$ke","$135e783d297c6b1e$var$Ce","t27","fromTimestamp","$135e783d297c6b1e$var$Le","t28","$135e783d297c6b1e$var$Me","$135e783d297c6b1e$var$Ue","t29","e12","$135e783d297c6b1e$var$Xe","$135e783d297c6b1e$var$Be","$135e783d297c6b1e$var$ze","$135e783d297c6b1e$var$Je","t37","fieldPaths","$135e783d297c6b1e$var$Ze","$135e783d297c6b1e$var$en","et","tt","t38","all","authCredentials","appCheckCredentials","Z","catch","t39","terminate","$135e783d297c6b1e$var$nn","t40","writes","t31","e14","n7","update","updateMask","verify","updateTransforms","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","$135e783d297c6b1e$var$We","$135e783d297c6b1e$var$rn","t41","e16","documents","t30","e13","found","newFoundDocument","missing","newNoDocument","$135e783d297c6b1e$var$on","$135e783d297c6b1e$var$un","t44","_terminated","e18","_databaseId","n9","app","options","r3","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","fetch","bind","_authCredentials","_appCheckCredentials","$135e783d297c6b1e$var$cn","credentials","cacheSizeBytes","ignoreUndefinedProperties","t45","e19","$135e783d297c6b1e$export$d0e2b3272814ce82","_app","_initialized","_settingsFrozen","_terminateTask","_setSettings","t46","_settings","client","sessionIndex","iamToken","authTokenFactory","_getSettings","_delete","_terminate","settings","$135e783d297c6b1e$export$f06a05d14c3a6678","$ix4Jr","_getProvider","getImmediate","identifier","$135e783d297c6b1e$export$6be62b059fb12175","_path","_key","id","parent","$135e783d297c6b1e$export$ab5a1a47940a200e","firestore","converter","withConverter","$135e783d297c6b1e$export$62297b13309008b2","_query","$135e783d297c6b1e$export$2a111da947c407d2","arguments","N","$135e783d297c6b1e$export$a1a8fea822d17659","_internalPath","$135e783d297c6b1e$export$9f55f2e2bf8c2fc1","t48","_byteString","$135e783d297c6b1e$export$c58bc8ee7ecc248d","_methodName","$135e783d297c6b1e$export$f9f719d1b6419c4","_lat","_long","isFinite","$135e783d297c6b1e$var$Pn","$135e783d297c6b1e$var$Vn","toMutation","$135e783d297c6b1e$var$Nn","$135e783d297c6b1e$var$Dn","$135e783d297c6b1e$var$$n","rt","st","it","ot","ut","ct","nt","at","ht","$135e783d297c6b1e$var$Jn","methodName","lt","ft","contains","find","$135e783d297c6b1e$var$xn","dt","$135e783d297c6b1e$var$Fn","$135e783d297c6b1e$var$Sn","t50","merge","mergeFields","$135e783d297c6b1e$var$Kn","$135e783d297c6b1e$var$Gn","a","t49","$135e783d297c6b1e$var$Qn","$135e783d297c6b1e$var$Xn","$135e783d297c6b1e$var$qn","_toFieldTransform","$135e783d297c6b1e$var$On","$135e783d297c6b1e$var$Cn","wt","$135e783d297c6b1e$var$zn","$135e783d297c6b1e$var$Ln","t51","$135e783d297c6b1e$var$Un","t52","r4","$135e783d297c6b1e$var$Hn","u1","$135e783d297c6b1e$var$jn","t53","l1","t54","f1","t55","e20","$135e783d297c6b1e$var$Wn","nullValue","fromDate","t56","e21","t57","getPrototypeOf","$135e783d297c6b1e$var$Yn","search","t58","some","$135e783d297c6b1e$export$acab0e6ef25eb301","ref","_firestore","_converter","_document","$135e783d297c6b1e$export$6d4d04e42af6b03c","_userDataWriter","fromFirestore","convertValue","$135e783d297c6b1e$var$rr","$135e783d297c6b1e$var$Tr","toFirestore","$135e783d297c6b1e$var$Ir","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","t68","t69","convertDocumentKey","$135e783d297c6b1e$export$11eb3b5ef9574821","e30","$135e783d297c6b1e$export$5ff77ddaff3c9e12","none","$135e783d297c6b1e$export$22d1fdd1e73faff2","$135e783d297c6b1e$export$f62af892fd92610c","$135e783d297c6b1e$export$30a014203d0d7e4f","t86","instanceIdentifier","e37","getProvider","apply","setMultipleInstances","factory","$parcel$global","window","module","exports","global","$iziToast","PLUGIN_NAME","ISMOBILE","document","querySelector","navigator","userAgent","ISCHROME","vendor","ISFIREFOX","InstallTrigger","ACCEPTSTOUCH","documentElement","POSITIONS","CONFIG","children","defaults1","class","title","titleColor","titleSize","titleLineHeight","messageColor","messageSize","messageLineHeight","backgroundColor","theme","icon","iconText","iconColor","iconUrl","image","imageWidth","maxWidth","zindex","layout","balloon","close","closeOnEscape","closeOnClick","displayMode","position","target","targetFirst","timeout","rtl","animateInside","drag","pauseOnHover","resetOnHover","progressBar","progressBarColor","progressBarEasing","overlay","overlayClose","overlayColor","transitionIn","transitionOut","transitionInMobile","transitionOutMobile","buttons","inputs","onOpening","onOpened","onClosing","onClosed","Element","parentNode","removeChild","CustomEvent","CustomEventPolyfill","event","params","bubbles","cancelable","detail","undefined","evt","createEvent","initCustomEvent","Event","collection","callback","scope","prop","extend","defaults","extended","htmlStr","createDocumentFragment","temp","createElement","frag","appendChild","firstChild","toast","instance","xpos","opacity","opacityRange","distance","classList","style","hide","stopMoving","startMoving","posX1","touches","clientX","toastLeft","offsetX","transition","ontouchmove","preventDefault","finalX","move","onmousemove","setTimeout","setSetting","option","getSetting","querySelectorAll","element","index","removeEventListener","info","success","warning","question","$toast","getAttribute","$elem","time","REMAINING","width","START","END","TIMER","clearTimeout","that","pause","propertyWidth","getComputedStyle","getPropertyValue","reset","closedBy","refs","$overlay","splice","setAttribute","innerWidth","MOBILEWIDTH","H","offsetHeight","height","pointerEvents","transitionDelay","dispatchEvent","ex1","console","overflow","ex","show","encodeURIComponent","exc1","toastCapsule","cover","$DOM","toastBody","toastTexts","classes","background","borderColor","str","err","isBase64","backgroundImage","marginRight","marginLeft","buttonClose","addEventListener","paddingLeft","paddingRight","progressBarDiv","progress","resume","createTextNode","strong","createFragElem","fontSize","lineHeight","$inputs","childNodes","focus","ts","$btns","marginBottom","visibility","currentStyle","marginTop","parseInt","wrapper","insertBefore","zIndex","animationTimes","counter","define","amd","openModalBtnDevelopers","closeModalBtnDevelopers","modalDeveloper","closeModalDeveloper","currentTarget"],"version":3,"file":"index.1d690fbe.js.map"}